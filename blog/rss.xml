<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="rss.xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Cadence Blog</title>
        <link>https://cadenceworkflow.io/Cadence-Docs/blog</link>
        <description>Cadence Blog</description>
        <lastBuildDate>Fri, 10 Oct 2025 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Controlling Workflows From Web]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2025/10/12/2025-10-12-controlling-workflows-from-web/controlling-workflows-from-web</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2025/10/12/2025-10-12-controlling-workflows-from-web/controlling-workflows-from-web</guid>
            <pubDate>Fri, 10 Oct 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[For a long time, controlling Cadence workflows was primarily done through the client SDKs or the administrative CLI. Our vision for Cadence Web has been to evolve it from a read-only inspection tool into a Unified Operational Hub for all workflow management needs. This means putting every essential workflow action directly in the hands of operators, support engineers, and developers—right where they observe workflows.]]></description>
            <content:encoded><![CDATA[<p>For a long time, controlling Cadence workflows was primarily done through the client SDKs or the administrative CLI. Our vision for <strong>Cadence Web</strong> has been to evolve it from a read-only inspection tool into a <strong>Unified Operational Hub</strong> for all workflow management needs. This means putting every essential workflow action directly in the hands of operators, support engineers, and developers—right where they observe workflows.</p>
<p>Over the past releases, we’ve been steadily introducing interactive capabilities such as <strong>Terminate</strong>, <strong>Cancel</strong>, <strong>Restart</strong>, <strong>Signal</strong>, and <strong>Reset</strong>. Each of these brought Cadence Web closer to becoming a full-featured operational console.</p>
<p>Today, we’re completing that journey with the introduction of the <strong><code>Start Workflow</code></strong> action. Operators can now manage the full workflow lifecycle—from initiation to completion—entirely within the Web UI.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="where-to-find-the-new-controls">Where to Find the New Controls<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/10/12/2025-10-12-controlling-workflows-from-web/controlling-workflows-from-web#where-to-find-the-new-controls" class="hash-link" aria-label="Direct link to Where to Find the New Controls" title="Direct link to Where to Find the New Controls" translate="no">​</a></h2>
<p>All workflow actions are designed to be discoverable and intuitive, fitting naturally into existing pages and workflows.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="1-workflow-execution-page">1. Workflow Execution Page<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/10/12/2025-10-12-controlling-workflows-from-web/controlling-workflows-from-web#1-workflow-execution-page" class="hash-link" aria-label="Direct link to 1. Workflow Execution Page" title="Direct link to 1. Workflow Execution Page" translate="no">​</a></h4>
<p><img decoding="async" loading="lazy" alt="Workflow actions menu" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/workflow-actions-menu-d6ed6d8b4c4c66f4cbfd37d49f691a53.png" width="1600" height="1116" class="img_ev3q"></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="2-domain-page-starting-new-workflows">2. Domain Page (Starting New Workflows)<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/10/12/2025-10-12-controlling-workflows-from-web/controlling-workflows-from-web#2-domain-page-starting-new-workflows" class="hash-link" aria-label="Direct link to 2. Domain Page (Starting New Workflows)" title="Direct link to 2. Domain Page (Starting New Workflows)" translate="no">​</a></h4>
<p><img decoding="async" loading="lazy" alt="Start new workflow" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/start-new-workflow-8bcf2028e18a364b18e5cf16f3f1b098.png" width="1600" height="853" class="img_ev3q"></p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="try-it-today">Try It Today!<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/10/12/2025-10-12-controlling-workflows-from-web/controlling-workflows-from-web#try-it-today" class="hash-link" aria-label="Direct link to Try It Today!" title="Direct link to Try It Today!" translate="no">​</a></h2>
<p>With <strong>Start Workflow</strong> now available, Cadence Web provides a truly end-to-end operational surface for workflows. Whether you're debugging incidents, restarting workflows after a fix, or manually kicking off test runs, everything you need is now in one place.</p>
<p>If you haven’t updated yet, we highly recommend upgrading to the latest Cadence Web release and exploring the new Workflow Actions.</p>]]></content:encoded>
            <category>Releases</category>
            <category>Announcement</category>
        </item>
        <item>
            <title><![CDATA[Cadence Joins CNCF (Cloud Native Computing Foundation)]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2025/10/06/cadence-joins-cncf-cloud-native-computing-foundation</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2025/10/06/cadence-joins-cncf-cloud-native-computing-foundation</guid>
            <pubDate>Mon, 06 Oct 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[using.png]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="using.png" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/cadence-joins-cncf-03b6cd48f3a98aa4a9e65b4f5c8b09a1.png" width="889" height="344" class="img_ev3q"></p>
<p>We’re proud to announce that <a href="https://cadenceworkflow.io/" target="_blank" rel="noopener noreferrer">the Cadence project</a> has joined the <a href="https://www.cncf.io/" target="_blank" rel="noopener noreferrer">CNCF (Cloud Native Computing Foundation)</a>®, the open-source foundation that hosts and maintains critical components of modern cloud-native infrastructure including Kubernetes®, Prometheus®, and Envoy® under the <a href="https://www.linuxfoundation.org/" target="_blank" rel="noopener noreferrer">Linux Foundation</a>®.</p>
<p>Cadence is an open-source, fault-tolerant, and highly scalable workflow orchestration engine created at Uber to help developers build and run resilient applications. It’s been powering thousands of use cases at Uber and other companies. By managing distributed state, retries, scaling, and failure recovery, Cadence enables teams to focus on business logic rather than infrastructure complexity. Mission-critical applications across industries including finance, e-commerce, healthcare, and transportation depend on Cadence.</p>
<p>Joining CNCF marks a significant milestone for the Cadence project, emphasizing the project’s open source commitment. With its <a href="https://cadenceworkflow.io/community/governance" target="_blank" rel="noopener noreferrer">open governance</a>, companies can join as maintainers and help improve long-term confidence. Increased transparency in roadmap and execution make upcoming features predictable.</p>
<p>Since its inception, the Cadence project’s ecosystem has reached over 150 companies and counting. Partners like NetApp® Instaclustr adopted the project and have offered it as a managed solution at scale. With CNCF’s support, the project aims to further its mission of simplifying distributed service development while delivering production-grade reliability at scale.</p>
<p>In the last several years, Cadence has made significant investments in its scalability, reliability, multitenancy, deployment safety, and portability, laying the necessary foundation to build enterprise-level features at scale, efficiently and reliably. It’s now a great time to build those features together, and we invite anyone to be a part of this future. Especially in the era of AI, Cadence will play a crucial role in durable orchestration.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-changing-in-the-community">What’s Changing in the Community?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/10/06/cadence-joins-cncf-cloud-native-computing-foundation#whats-changing-in-the-community" class="hash-link" aria-label="Direct link to What’s Changing in the Community?" title="Direct link to What’s Changing in the Community?" translate="no">​</a></h2>
<p>We’ll stop using our Slack workspace (<a href="http://uber-cadence.slack.com/" target="_blank" rel="noopener noreferrer">uber-cadence.slack.com</a>). Going forward, we’ll use CNCF’s Slack workspace (<a href="https://cloud-native.slack.com/" target="_blank" rel="noopener noreferrer">cloud-native.slack.com</a>). Join this new workspace using <a href="https://communityinviter.com/apps/cloud-native/cncf" target="_blank" rel="noopener noreferrer">Community Inviter</a> and join the <em>#cadence-users</em> channel to contact us.</p>
<p>Our website (<a href="http://cadenceworkflow.io/" target="_blank" rel="noopener noreferrer">cadenceworkflow.io</a>) and our GitHub org (<a href="http://github.com/cadence-workflow" target="_blank" rel="noopener noreferrer">github.com/cadence-workflow</a>) will stay the same and we’ll continue sharing new features from there.</p>
<p>We’ll publish our roadmap at <a href="https://github.com/orgs/cadence-workflow/projects" target="_blank" rel="noopener noreferrer">https://github.com/orgs/cadence-workflow/projects</a>. We’ll hold community meetings to brainstorm about and prioritize upcoming features. Project tracking will move from internal tools to GitHub. Projects will have dedicated issues so you can track pull requests, updates, and timelines.</p>
<p>We’ll organize regular meetups (in-person and virtual) to showcase new features, have discussions, and learn from valuable guests.</p>
<p>For maintainers, we’ll hold regular meetings to update each other. If you’d like to become a maintainer, please contact us on Slack so we can help with starter tasks and larger projects as you gain experience.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-become-a-maintainer">How to Become a Maintainer?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/10/06/cadence-joins-cncf-cloud-native-computing-foundation#how-to-become-a-maintainer" class="hash-link" aria-label="Direct link to How to Become a Maintainer?" title="Direct link to How to Become a Maintainer?" translate="no">​</a></h2>
<p>We invite companies that are already using Cadence, or plan to adopt it in the future, to become official maintainers and help shape this critical piece of infrastructure for your organization.</p>
<p>With this important milestone, we are prioritizing the addition of new maintainers and working to make the onboarding experience as smooth as possible. Our goal is to scale the project responsibly across all areas including development, decision making, efficiency, modernization, prioritization, and more.</p>
<p>If you are interested, please reach out to us in the #cadence-users channel mentioned above, and we will help you find suitable projects to contribute to. If you already have something in mind, feel free to open an issue in the appropriate repository under <a href="http://github.com/cadence-workflow" target="_blank" rel="noopener noreferrer">github.com/cadence-workflow</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="acknowledgments">Acknowledgments<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/10/06/cadence-joins-cncf-cloud-native-computing-foundation#acknowledgments" class="hash-link" aria-label="Direct link to Acknowledgments" title="Direct link to Acknowledgments" translate="no">​</a></h2>
<p><em>CNCF® and the CNCF logo design are registered trademarks of the Cloud Native Computing Foundation.</em></p>
<p><em>Envoy®, Kubernetes®, Prometheus®, and their logos are registered trademarks of The Linux Foundation® in the United States and other countries. No endorsement by The Linux Foundation is implied by the use of these marks.</em></p>
<p><em>Instaclustr® and NetApp® are trademarks of NetApp, Inc.</em></p>]]></content:encoded>
            <category>Announcement</category>
        </item>
        <item>
            <title><![CDATA[Introducing Batch Future with Concurrency Control]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution</guid>
            <pubDate>Thu, 25 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[We're excited to announce Batch Future, a new feature in the Cadence Go client that provides controlled concurrency for bulk operations, preventing overwhelming downstream services while maintaining efficient parallel processing.]]></description>
            <content:encoded><![CDATA[<p>Are you struggling with uncontrolled concurrency when trying to process thousands of activities or child workflows? Do you find yourself hitting rate limits or overwhelming downstream services when running bulk operations? We've got great news for you!</p>
<p>Today, we're thrilled to announce <strong>Batch Future</strong>, a powerful new feature in the Cadence Go client that provides controlled concurrency for bulk operations. You can now process multiple activities in parallel while maintaining precise control over how many run simultaneously.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-problem-uncontrolled-concurrency">The Problem: Uncontrolled Concurrency<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#the-problem-uncontrolled-concurrency" class="hash-link" aria-label="Direct link to The Problem: Uncontrolled Concurrency" title="Direct link to The Problem: Uncontrolled Concurrency" translate="no">​</a></h2>
<p>Traditionally, when you need to process multiple items in a Cadence workflow, you'd write something like this:</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ProcessUsers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> userIDs </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> futures </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Future</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> userID </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> userIDs </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        future </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> UpdateUserActivity</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> userID</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        futures </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">futures</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> future</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Wait for all activities to complete</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> future </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> futures </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> future</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>This approach works, but it has <strong>uncontrolled concurrency</strong>:</p>
<ul>
<li>All activities start simultaneously, potentially overwhelming downstream services</li>
<li>No way to limit concurrent executions</li>
<li>Difficult to manage resource usage</li>
<li>Can cause rate limiting or timeouts</li>
<li>Causing hot shard in Cadence server's task processing</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-solution-batch-future">The Solution: Batch Future<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#the-solution-batch-future" class="hash-link" aria-label="Direct link to The Solution: Batch Future" title="Direct link to The Solution: Batch Future" translate="no">​</a></h2>
<p>With Batch Future, you can process users with <strong>controlled concurrency</strong>:</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ProcessUsersBatch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> userIDs </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> concurrency </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Create activity factories for each user</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    factories </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">make</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Future</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">userIDs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> userID </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> userIDs </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        userID </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> userID </span><span class="token comment" style="color:#999988;font-style:italic">// Capture loop variable for closure</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        factories</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Future </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> UpdateUserActivity</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> userID</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Execute with controlled concurrency</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    batch</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewBatchFuture</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> concurrency</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> factories</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Errorf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"failed to create batch future: %w"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Wait for all activities to complete</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> batch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="key-benefits-controlled-concurrency">Key Benefits: Controlled Concurrency<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#key-benefits-controlled-concurrency" class="hash-link" aria-label="Direct link to Key Benefits: Controlled Concurrency" title="Direct link to Key Benefits: Controlled Concurrency" translate="no">​</a></h2>
<p>Batch Future provides several important advantages:</p>
<ul>
<li><strong>Controlled Concurrency</strong>: Limit simultaneous executions to prevent overwhelming downstream services</li>
<li><strong>Resource Management</strong>: Better control over memory and CPU usage</li>
<li><strong>Rate Limiting Protection</strong>: Avoid hitting API rate limits by controlling execution speed</li>
<li><strong>Graceful Cancellation</strong>: All activities can be cancelled together if needed</li>
<li><strong>Simplified Error Handling</strong>: Single point of failure handling for the entire batch</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="real-world-use-cases">Real-World Use Cases<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#real-world-use-cases" class="hash-link" aria-label="Direct link to Real-World Use Cases" title="Direct link to Real-World Use Cases" translate="no">​</a></h2>
<p>Batch Future is perfect for scenarios like:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-multi-service-data-synchronization">1. Multi-Service Data Synchronization<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#1-multi-service-data-synchronization" class="hash-link" aria-label="Direct link to 1. Multi-Service Data Synchronization" title="Direct link to 1. Multi-Service Data Synchronization" translate="no">​</a></h3>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SyncProductData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> products </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">Product</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Sync to multiple services with different concurrency limits</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inventoryBatch </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">createBatch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> products</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> SyncToInventoryActivity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    searchBatch </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">createBatch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> products</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> SyncToSearchActivity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    analyticsBatch </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">createBatch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> products</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> SyncToAnalyticsActivity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Wait for all sync operations to complete</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> inventoryBatch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Errorf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"inventory sync failed: %w"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> searchBatch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Errorf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"search sync failed: %w"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> analyticsBatch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">createBatch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> items </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">Product</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> concurrency </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> activityFunc </span><span class="token keyword" style="color:#00009f">interface</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Future </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    factories </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">make</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Future</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">items</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> item </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> items </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        item </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> item</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        factories</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Future </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> activityFunc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> item</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    batch</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewBatchFuture</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> concurrency</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> factories</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> batch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-progressive-data-processing-with-different-priorities">2. Progressive Data Processing with Different Priorities<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#2-progressive-data-processing-with-different-priorities" class="hash-link" aria-label="Direct link to 2. Progressive Data Processing with Different Priorities" title="Direct link to 2. Progressive Data Processing with Different Priorities" translate="no">​</a></h3>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ProcessDataWithPriorities</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">DataItem</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// High priority items get more concurrency</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    highPriority </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">filterByPriority</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"high"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lowPriority </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">filterByPriority</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"low"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Process high priority items first with high concurrency</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    highBatch</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewBatchFuture</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">createFactories</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">highPriority</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ProcessHighPriorityActivity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Wait for high priority to complete, then process low priority with lower concurrency</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> highBatch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lowBatch</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewBatchFuture</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">createFactories</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lowPriority</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ProcessLowPriorityActivity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lowBatch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-conditional-batch-processing-with-retry-logic">3. Conditional Batch Processing with Retry Logic<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#3-conditional-batch-processing-with-retry-logic" class="hash-link" aria-label="Direct link to 3. Conditional Batch Processing with Retry Logic" title="Direct link to 3. Conditional Batch Processing with Retry Logic" translate="no">​</a></h3>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ProcessOrdersWithRetry</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> orders </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">Order</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// First attempt with normal concurrency</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    factories </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">make</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Future</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orders</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> order </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> orders </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        order </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> order</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        factories</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Future </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ProcessOrderActivity</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> order</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    batch</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewBatchFuture</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> factories</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> batch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// If batch fails, retry failed orders individually with higher concurrency</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">retryFailedOrders</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> orders</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-it-works-under-the-hood">How It Works Under the Hood<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#how-it-works-under-the-hood" class="hash-link" aria-label="Direct link to How It Works Under the Hood" title="Direct link to How It Works Under the Hood" translate="no">​</a></h2>
<p>Batch Future leverages Cadence's existing activity infrastructure with controlled concurrency:</p>
<ol>
<li><strong>Future Factories</strong>: Creates lazy-evaluated future creation functions that aren't scheduled until needed</li>
<li><strong>Concurrency Control</strong>: Limits the number of pending futures</li>
<li><strong>Queue Management</strong>: Maintains a queue of to-be-scheduled futures and starts new ones as others complete</li>
<li><strong>Future Management</strong>: Returns a single future that completes when all futures finish</li>
<li><strong>Error Propagation</strong>: If any future fails, the error is stored in a multi-error wrapper entity, users can either cancel or fail open</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="getting-started">Getting Started<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#getting-started" class="hash-link" aria-label="Direct link to Getting Started" title="Direct link to Getting Started" translate="no">​</a></h2>
<p>Ready to supercharge your workflows? Here's how to get started:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-update-your-go-client">1. Update Your Go Client<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#1-update-your-go-client" class="hash-link" aria-label="Direct link to 1. Update Your Go Client" title="Direct link to 1. Update Your Go Client" translate="no">​</a></h3>
<p>Make sure you're using the latest version of the Cadence Go client:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">go get github.com/uber/cadence-go-client@latest</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-try-the-sample">2. Try the Sample<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#2-try-the-sample" class="hash-link" aria-label="Direct link to 2. Try the Sample" title="Direct link to 2. Try the Sample" translate="no">​</a></h3>
<p>Check out our <a href="https://github.com/cadence-workflow/cadence-samples/tree/master/cmd/samples/batch" target="_blank" rel="noopener noreferrer">Batch Future sample</a> to see it in action.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-migrate-your-workflows-with-caution">3. Migrate Your Workflows (With Caution)<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#3-migrate-your-workflows-with-caution" class="hash-link" aria-label="Direct link to 3. Migrate Your Workflows (With Caution)" title="Direct link to 3. Migrate Your Workflows (With Caution)" translate="no">​</a></h3>
<p><strong>This is not a simple code change</strong>. Migrating to Batch Future requires workflow versioning and careful production planning.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="the-challenge">The Challenge<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#the-challenge" class="hash-link" aria-label="Direct link to The Challenge" title="Direct link to The Challenge" translate="no">​</a></h4>
<p>Batch Future changes your workflow's execution pattern from individual activities to controlled batching. This creates non-deterministic changes that will break existing running workflows without proper versioning.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="migration-approaches">Migration Approaches<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#migration-approaches" class="hash-link" aria-label="Direct link to Migration Approaches" title="Direct link to Migration Approaches" translate="no">​</a></h4>
<p><strong>Option A: Versioned Migration (Recommended for Production)</strong></p>
<ul>
<li>Use <a href="https://cadenceworkflow.io/docs/go-client/workflow-versioning" target="_blank" rel="noopener noreferrer">workflow.GetVersion()</a> to support both old and new patterns</li>
<li>Deploy code that handles both execution patterns</li>
<li>Gradually transition new workflows to use Batch Future</li>
<li>Clean up old code after all workflows complete</li>
</ul>
<p><strong>Option B: New Workflow Type (Simpler but Requires Coordination)</strong></p>
<ul>
<li>Create a new workflow type specifically for Batch Future</li>
<li>Update callers to use the new workflow type</li>
<li>Deprecate the old workflow type after migration</li>
</ul>
<p><strong>Option C: Workflow Replacement (Not Gradual)</strong></p>
<ul>
<li>Terminate existing workflows (if acceptable)</li>
<li>Deploy new code with Batch Future</li>
<li>Start new workflows with the new pattern</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="testing-strategy">Testing Strategy<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#testing-strategy" class="hash-link" aria-label="Direct link to Testing Strategy" title="Direct link to Testing Strategy" translate="no">​</a></h4>
<p>Before deploying, use <a href="https://cadenceworkflow.io/docs/go-client/workflow-replay-shadowing" target="_blank" rel="noopener noreferrer">Workflow Shadowing</a> to replay production workflow histories against your new code. This catches compatibility issues before they reach production.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="key-considerations">Key Considerations<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#key-considerations" class="hash-link" aria-label="Direct link to Key Considerations" title="Direct link to Key Considerations" translate="no">​</a></h4>
<ul>
<li><strong>Timeline</strong>: Plan for weeks, not days</li>
<li><strong>Coordination</strong>: Requires careful coordination between teams</li>
<li><strong>Monitoring</strong>: Essential during transition period</li>
<li><strong>Rollback</strong>: Always have a rollback plan ready</li>
<li><strong>Testing</strong>: Extensive testing in staging environment required</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="when-not-to-migrate">When NOT to Migrate<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#when-not-to-migrate" class="hash-link" aria-label="Direct link to When NOT to Migrate" title="Direct link to When NOT to Migrate" translate="no">​</a></h4>
<ul>
<li>If you have long-running workflows (weeks/months)</li>
<li>If you can't coordinate a proper versioning strategy</li>
<li>If the performance benefits don't justify the migration complexity</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="best-practices">Best Practices<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#best-practices" class="hash-link" aria-label="Direct link to Best Practices" title="Direct link to Best Practices" translate="no">​</a></h2>
<ul>
<li><strong>Choose Appropriate Concurrency</strong>: Start with 3-5 concurrent activities and adjust based on downstream service capacity</li>
<li><strong>Activity Factories</strong>: Always capture loop variables in closures to avoid race conditions</li>
<li><strong>Error Handling</strong>: Implement proper error handling for individual activity failures</li>
<li><strong>Resource Management</strong>: Consider memory usage for large batches</li>
<li><strong>Monitoring</strong>: Use heartbeats for long-running activities within the batch</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="try-it-today">Try It Today!<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/09/25/introducing-batch-future-faster-activity-execution#try-it-today" class="hash-link" aria-label="Direct link to Try It Today!" title="Direct link to Try It Today!" translate="no">​</a></h2>
<p>Batch Future is available now in the latest Cadence Go client. We can't wait to see how you use it to optimize your workflows!</p>
<p>Have questions or feedback? Join our <a href="http://t.uber.com/cadence-slack" target="_blank" rel="noopener noreferrer">Slack community</a> or open an issue on <a href="https://github.com/cadence-workflow/cadence-go-client" target="_blank" rel="noopener noreferrer">GitHub</a>.</p>
<p>Happy coding, and here's to faster, more efficient workflows!</p>]]></content:encoded>
            <category>Announcement</category>
            <category>Releases</category>
        </item>
        <item>
            <title><![CDATA[Workflow Diagnostics]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2025/08/06/workflow-diagnostics</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2025/08/06/workflow-diagnostics</guid>
            <pubDate>Wed, 06 Aug 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Cadence users, especially new users, often struggle with failed/stuck workflows and are unable to understand what is wrong with their workflow. This can now be addressed by a tool that runs on demand to check the workflow and provide diagnostics with actionable information via clear runbooks that users can follow. The overarching goal is to help cadence users understand what is wrong with their workflow]]></description>
            <content:encoded><![CDATA[<p>Cadence users, especially new users, often struggle with failed/stuck workflows and are unable to understand what is wrong with their workflow. This can now be addressed by a tool that runs on demand to check the workflow and provide diagnostics with actionable information via clear runbooks that users can follow. The overarching goal is to help cadence users understand what is wrong with their workflow</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introducing-workflow-diagnostics">Introducing Workflow Diagnostics<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/08/06/workflow-diagnostics#introducing-workflow-diagnostics" class="hash-link" aria-label="Direct link to Introducing Workflow Diagnostics" title="Direct link to Introducing Workflow Diagnostics" translate="no">​</a></h2>
<p>Cadence workflow diagnostics fetches the workflow execution history and identifies the issues in the workflow i.e. points out the different items that did not work as expected. For example, workflow timeouts. Next, for the issue identified, it provides the potential root cause by listing the different reasons that must've caused the issue. For example, the tasklist does not have pollers. Lastly, it provides ways to resolve the issue since we want the cadence users to have actionable diagnostics. For example, timeouts could occur when the workflow is running on a tasklist without enough workers to start the activities</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-it-works">How it works?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/08/06/workflow-diagnostics#how-it-works" class="hash-link" aria-label="Direct link to How it works?" title="Direct link to How it works?" translate="no">​</a></h2>
<p>Cadence Workflow Diagnostics will be initiated on demand by a user for a given workflow execution in a cadence domain. The call will be made to cadence-frontend service which in turn triggers a diagnostics workflow that runs in the cadence-worker service to perform the diagnostics based on workflow execution history.</p>
<p>Code references:</p>
<ol>
<li>
<p>The <a href="https://github.com/cadence-workflow/cadence/tree/master/service/worker/diagnostics/invariant" target="_blank" rel="noopener noreferrer">invariant interface</a> where each invariant implementation checks and root causes one specific issue like timeouts or failures.</p>
</li>
<li>
<p>The <a href="https://github.com/cadence-workflow/cadence/blob/master/service/worker/diagnostics/workflow.go" target="_blank" rel="noopener noreferrer">diagnostics workflow</a> that runs as a cadence workflow where it has 2 activities: one to identify the issues using the invariant checks and other to root cause them. Some invariants might not have a rootcause implementation too.</p>
</li>
<li>
<p><a href="https://github.com/cadence-workflow/cadence/blob/master/service/worker/diagnostics/parent_workflow.go" target="_blank" rel="noopener noreferrer">Parent workflow</a> to trigger diagnostics as a child workflow followed by emission of some usage logs for observability</p>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-use-this-feature">How to use this feature?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/08/06/workflow-diagnostics#how-to-use-this-feature" class="hash-link" aria-label="Direct link to How to use this feature?" title="Direct link to How to use this feature?" translate="no">​</a></h2>
<ol>
<li><a href="https://github.com/cadence-workflow/cadence/blob/master/service/frontend/api/interface.go#L47" target="_blank" rel="noopener noreferrer">Frontend API</a> or cadence CLI that triggers a call to start the diagnostics workflow - This starts the diagnostics workflow and provides the wf execution details.</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cadence </span><span class="token parameter variable" style="color:#36acaa">--do</span><span class="token plain"> cadence-sample-domain workflow diag </span><span class="token parameter variable" style="color:#36acaa">--wid</span><span class="token plain"> w123 </span><span class="token parameter variable" style="color:#36acaa">--rid</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">123</span><br></span></code></pre></div></div>
<p>The above command would start performing diagnostics via a cadence workflow and return its details. Sample output:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Workflow diagnosis started. Query the diagnostic workflow to get diagnostics report.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token plain">Diagnostic Workflow </span><span class="token assign-left variable" style="color:#36acaa">details</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">==</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Domain: cadence-system, Workflow Id: diag123wid, Run Id: diag123rid</span><br></span></code></pre></div></div>
<p>Use workflow query command to fetch the results of the diagnostics</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cadence </span><span class="token parameter variable" style="color:#36acaa">--do</span><span class="token plain"> cadence-system workflow query </span><span class="token parameter variable" style="color:#36acaa">--wid</span><span class="token plain"> diag123wid </span><span class="token parameter variable" style="color:#36acaa">--rid</span><span class="token plain"> diag123rid </span><span class="token parameter variable" style="color:#36acaa">--qt</span><span class="token plain"> query-diagnostics-report</span><br></span></code></pre></div></div>
<ol start="2">
<li>The cadence web UI will have a diagnostics tab on the workflow execution page that displays the results of running diagnostics on the workflow. It lists the various issues identified, the potential rootcause and the link to runbooks.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-add-a-new-use-case-to-workflow-diagnostics">How to add a new use-case to workflow diagnostics?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/08/06/workflow-diagnostics#how-to-add-a-new-use-case-to-workflow-diagnostics" class="hash-link" aria-label="Direct link to How to add a new use-case to workflow diagnostics?" title="Direct link to How to add a new use-case to workflow diagnostics?" translate="no">​</a></h2>
<ol>
<li>
<p>Define an implementation of the invariant interface. <a href="https://github.com/cadence-workflow/cadence/tree/master/service/worker/diagnostics/invariant/failure" target="_blank" rel="noopener noreferrer">link</a></p>
</li>
<li>
<p>Add it to the list of invariants provided on service start up. <a href="https://github.com/cadence-workflow/cadence/blob/master/cmd/server/cadence/server.go#L265" target="_blank" rel="noopener noreferrer">link</a></p>
</li>
<li>
<p>Update the diagnostics workflow to be able to construct the diagnostics result <a href="https://github.com/cadence-workflow/cadence/blob/master/service/worker/diagnostics/workflow.go#L201" target="_blank" rel="noopener noreferrer">link</a></p>
</li>
<li>
<p>Provide a runbook for the issues/rootcause and link it up along with the diagnostics result</p>
</li>
</ol>]]></content:encoded>
            <category>Announcement</category>
        </item>
        <item>
            <title><![CDATA[Safe deployments of Versioned workflows]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2025/07/01/2025-07-01-safe-deployment-of-versioned-workflows/safe-deployment-of-versioned-workflows</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2025/07/01/2025-07-01-safe-deployment-of-versioned-workflows/safe-deployment-of-versioned-workflows</guid>
            <pubDate>Thu, 10 Jul 2025 16:00:00 GMT</pubDate>
            <description><![CDATA[At Uber, we manage billions of workflows with lifetimes ranging from seconds to years. Over the course of their lifetime, workflow code logic often requires changes. To prevent non-deterministic errors that changes may cause, Cadence offers a Versioning feature. However, the feature's usage is limited because changes are only backward-compatible, but not forward-compatible. This makes potential rollbacks or workflow execution rescheduling unsafe.]]></description>
            <content:encoded><![CDATA[<p>At Uber, we manage billions of workflows with lifetimes ranging from seconds to years. Over the course of their lifetime, workflow code logic often requires changes. To prevent non-deterministic errors that changes may cause, Cadence offers <a href="https://cadenceworkflow.io/docs/go-client/workflow-versioning" target="_blank" rel="noopener noreferrer">a Versioning feature</a>. However, the feature's usage is limited because changes are only backward-compatible, but not forward-compatible. This makes potential rollbacks or workflow execution rescheduling unsafe.</p>
<p>To address these issues, we have made recent enhancements to <a href="https://cadenceworkflow.io/docs/go-client/workflow-versioning" target="_blank" rel="noopener noreferrer">the Versioning API</a>, enabling the safe deployment of versioned workflows by separating code changes from the activation of new logic.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-a-versioned-workflow">What is a Versioned Workflow?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/07/01/2025-07-01-safe-deployment-of-versioned-workflows/safe-deployment-of-versioned-workflows#what-is-a-versioned-workflow" class="hash-link" aria-label="Direct link to What is a Versioned Workflow?" title="Direct link to What is a Versioned Workflow?" translate="no">​</a></h2>
<p>Cadence reconstructs a workflow's execution history by replaying past events against your workflow code, expecting the exact same outcome every time. If your workflow code changes in an incompatible way, this replaying process can lead to non-deterministic errors.</p>
<p>A versioned workflow uses a <a href="https://cadenceworkflow.io/docs/go-client/workflow-versioning" target="_blank" rel="noopener noreferrer">Versioning feature</a> to help you avoid errors. This allows developers to safely update their workflow code without breaking existing executions. The key is the <code>workflow.GetVersion</code> function (available in <a href="https://cadenceworkflow.io/docs/go-client/workflow-versioning" target="_blank" rel="noopener noreferrer">Go</a> and <a href="https://cadenceworkflow.io/docs/java-client/versioning" target="_blank" rel="noopener noreferrer">Java</a>). By using <code>workflow.GetVersion</code>, you can mark points in your code where changes occur, ensuring that future calls will return a specific version number.</p>
<p>Before the rollout, only instances of workflow code <strong>v0.1</strong> existed:</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">v </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetVersion</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"change-id"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DefaultVersion</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> v </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DefaultVersion </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    err </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ActivityA</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">result1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    err </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ActivityC</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">result1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="deployment-flow">Deployment flow<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/07/01/2025-07-01-safe-deployment-of-versioned-workflows/safe-deployment-of-versioned-workflows#deployment-flow" class="hash-link" aria-label="Direct link to Deployment flow" title="Direct link to Deployment flow" translate="no">​</a></h3>
<p>Let’s consider an example deployment of a change from workflow code <strong>v0.1</strong>, where only <code>FooActivity</code> is supported.</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Git tag: v0.1 </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">MyWorkflow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> FooActivity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>to workflow code <strong>v0.2</strong>, which introduces a new <code>BarActivity</code> and utilizes the Versioning feature:</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Git tag: v0.2 </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">MyWorkflow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	version </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetVersion</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"MyChange"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DefaultVersion</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> version </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DefaultVersion </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> FooActivity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> BarActivity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Before the rollout, only instances of workflow code <strong>v0.1</strong> existed:</p>
<p><img decoding="async" loading="lazy" alt="old-deployment-flow-v0.1.png" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/old-deployment-flow-v0.1-6d8342765e8cb8e3ecd314b6cd0a9ce6.png" width="1424" height="458" class="img_ev3q"></p>
<p>Rollouts are typically performed gradually, with new workers replacing previous worker instances one at a time. This means that multiple workers with workflow code <strong>v0.1</strong> and <strong>v0.2</strong> can exist simultaneously. When a worker is replaced, a running workflow execution is rescheduled to another worker. Thanks to the Versioning feature, a worker with workflow code <strong>v0.2</strong> can support a workflow execution started by a worker with workflow code <strong>v0.1</strong>.</p>
<p><img decoding="async" loading="lazy" alt="old-deployment-flow-v0.1-v0.2.png" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/old-deployment-flow-v0.1-v0.2-b827128819beaa983d6989ad59533858.png" width="1407" height="463" class="img_ev3q">
During rollouts, the service should continue to serve production traffic, allowing new workflows to be initiated. If a new worker processes a "Start Workflow Execution" request, it will execute a workflow based on the new version. However, if an old worker handles the request, it will start a workflow based on the old version.</p>
<p><img decoding="async" loading="lazy" alt="old-deployment-flow-v0.1-v0.2-start-workflow.png" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/old-deployment-flow-v0.1-v0.2-start-workflow-73fd97917cc2729a1a3fe6a9cecc3fc5.png" width="1408" height="653" class="img_ev3q"></p>
<p>If a rollout is completed successfully, both the new and old workflows will continue to execute simultaneously.
<img decoding="async" loading="lazy" alt="old-deployment-flow-v0.2.png" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/old-deployment-flow-v0.2-a8e914f62890fd34b7747dc57c81d5c3.png" width="1413" height="475" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="versioned-workflow-rescheduling-problem">Versioned Workflow Rescheduling Problem<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/07/01/2025-07-01-safe-deployment-of-versioned-workflows/safe-deployment-of-versioned-workflows#versioned-workflow-rescheduling-problem" class="hash-link" aria-label="Direct link to Versioned Workflow Rescheduling Problem" title="Direct link to Versioned Workflow Rescheduling Problem" translate="no">​</a></h2>
<p>Workflows typically execute on the same worker on which they started. However, various factors can necessitate rescheduling with a different worker.:</p>
<ul>
<li><strong>Worker Shutdown</strong>: Occurs when a worker is shut down due to reasons such as rollouts, rollbacks, restarts, or instance crashes.</li>
<li><strong>Worker Unavailability</strong>: Occurs when a worker is running but loses connection to the server, becoming unavailable.</li>
<li><strong>High Traffic Load</strong>: Occurs when a worker's sticky cache is fully utilized, preventing further workflow execution and causing the server to reschedule the workflow to another worker.</li>
</ul>
<p>During a rollout or rollback, workflow rescheduling for workflow executions with new versions becomes unsafe, especially during rollbacks:
<img decoding="async" loading="lazy" alt="workflow-rescheduling-problem.png" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/workflow-rescheduling-problem-5fd5b5c41c9c2c408bff76d54043fe95.png" width="1425" height="1077" class="img_ev3q"></p>
<ul>
<li>If an old workflow is rescheduled to either an old or a new worker, it generally processes correctly.</li>
<li>If a new workflow is rescheduled to an old worker, it will be blocked or even fail (depending on <code>NonDeterministicWorkflowPolicy</code>).</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="why-did-it-happen">Why did it happen?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/07/01/2025-07-01-safe-deployment-of-versioned-workflows/safe-deployment-of-versioned-workflows#why-did-it-happen" class="hash-link" aria-label="Direct link to Why did it happen?" title="Direct link to Why did it happen?" translate="no">​</a></h3>
<p>The old worker doesn't support the new version and cannot replay its history correctly, which leads to a non-deterministic error. The Versioning API allowed customers to make only backward-compatible changes to workflow code definitions; however, these changes were not forward-compatible.</p>
<p>At the same time, there were no workarounds allowing customers to make these changes forward-compatible, so they couldn't separate code changes from the activation of the new version.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-impact-did-we-have-at-uber">What impact did we have at Uber?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/07/01/2025-07-01-safe-deployment-of-versioned-workflows/safe-deployment-of-versioned-workflows#what-impact-did-we-have-at-uber" class="hash-link" aria-label="Direct link to What impact did we have at Uber?" title="Direct link to What impact did we have at Uber?" translate="no">​</a></h3>
<p>Depending on the workflow code, code changes, and impact, to eliminate the negative impact of a rollback, a Cadence customer needed to identify all problematic workflows, terminate them if they did not fail automatically, and restart them. These steps resulted in a significant on-call burden, leading to possible SLO violations and incidents.</p>
<p>Based on customer impact, we introduced changes in the Versioning API, enabling customers to separate code changes from the activation of the new version.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="executewithversion-and-executewithminversion">ExecuteWithVersion and ExecuteWithMinVersion<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/07/01/2025-07-01-safe-deployment-of-versioned-workflows/safe-deployment-of-versioned-workflows#executewithversion-and-executewithminversion" class="hash-link" aria-label="Direct link to ExecuteWithVersion and ExecuteWithMinVersion" title="Direct link to ExecuteWithVersion and ExecuteWithMinVersion" translate="no">​</a></h2>
<p>The recent release of the Go SDK (Java soon) has extended the GetVersion function and introduced two new options:</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// When it's executed for the first time, it returns 2, instead of 10 </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">version </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetVersion</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"changeId"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteWithVersion</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// When it's executed for the first time, it returns 1, instead of 10 </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">version </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetVersion</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"changeId"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteWithMinVersion</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre></div></div>
<p>These two new options enable customers to choose which version should be returned when <code>GetVersion</code> is executed for the first time, instead of the maximum supported version.</p>
<ul>
<li><code>ExecuteWithVersion</code> returns a specified value.</li>
<li><code>ExecuteWithMinVersion</code> returns a minimal supported version.</li>
</ul>
<p>Let’s extend the example above and consider the deployment of versioned workflows with new functions:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="deployment-of-versioned-workflows">Deployment of Versioned workflows<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/07/01/2025-07-01-safe-deployment-of-versioned-workflows/safe-deployment-of-versioned-workflows#deployment-of-versioned-workflows" class="hash-link" aria-label="Direct link to Deployment of Versioned workflows" title="Direct link to Deployment of Versioned workflows" translate="no">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="step-0">Step 0<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/07/01/2025-07-01-safe-deployment-of-versioned-workflows/safe-deployment-of-versioned-workflows#step-0" class="hash-link" aria-label="Direct link to Step 0" title="Direct link to Step 0" translate="no">​</a></h4>
<p>The initial version remains <strong>v0.1</strong></p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Git tag: v0.1 </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// MyWorkflow supports: workflow.DefaultVersion </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">MyWorkflow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> FooActivity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>When a <code>StartWorkflowExecution</code> request is processed, a new workflow execution will have a <code>DefaultVersion</code> of the upcoming change ID.</p>
<p><img decoding="async" loading="lazy" alt="new-deployment-flow-step-0.png" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/new-deployment-flow-step-0-d99eeccb942d08db136e3b477ea9928e.png" width="1394" height="575" class="img_ev3q"></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="step-1">Step 1<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/07/01/2025-07-01-safe-deployment-of-versioned-workflows/safe-deployment-of-versioned-workflows#step-1" class="hash-link" aria-label="Direct link to Step 1" title="Direct link to Step 1" translate="no">​</a></h4>
<p><code>GetVersion</code> is still used; however, <code>workflow.ExecuteWithVersion</code> has also been added.</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Git tag: v0.2   </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// MyWorkflow supports: workflow.DefaultVersion and 1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">MyWorkflow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// When GetVersion is executed for the first time, workflow.DefaultVersion will be returned</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    version </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetVersion</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"MyChange"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DefaultVersion</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteWithVersion</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DefaultVersion</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> version </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DefaultVersion </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> FooActivity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> BarActivity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Worker <strong>v0.2</strong> contains the new workflow code definition that supports the new logic. However, when a StartWorkflowExecution request is processed, a new workflow execution will still have the default version of the “MyChange” change ID.</p>
<p><img decoding="async" loading="lazy" alt="new-deployment-flow-step-1.png" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/new-deployment-flow-step-1-a2459e69b387127c3c238046ce6465ce.png" width="1404" height="539" class="img_ev3q"></p>
<p>This change enables customers to easily roll back to worker <strong>v0.1</strong> without encountering any non-deterministic errors.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="step-2">Step 2<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/07/01/2025-07-01-safe-deployment-of-versioned-workflows/safe-deployment-of-versioned-workflows#step-2" class="hash-link" aria-label="Direct link to Step 2" title="Direct link to Step 2" translate="no">​</a></h4>
<p>Once all <strong>v0.2</strong> workers are replaced with <strong>v0.1</strong> workers, we can deploy a new worker that begins workflow executions with the new version.</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Git tag: v0.3   </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// MyWorkflow supports: workflow.DefaultVersion and 1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">MyWorkflow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// When GetVersion is executed for the first time, Version #1 will be returned </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    version </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetVersion</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"MyChange"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DefaultVersion</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> version </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DefaultVersion </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> FooActivity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> BarActivity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Worker <strong>v0.3</strong> contains the new workflow code definition that supports the new logic while still supporting the previous logic. Therefore, when a StartWorkflowExecution request is processed, a new workflow execution will have Version #1 of the “MyChange” change ID.</p>
<p><img decoding="async" loading="lazy" alt="new-deployment-flow-step-2.png" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/new-deployment-flow-step-2-ab5a51b76ed713d975c38232f5fb42aa.png" width="1415" height="555" class="img_ev3q"></p>
<p>This change enables customers to easily roll back to worker <strong>v0.2</strong> without any non-deterministic errors, as both worker versions support "DefaultVersion" and "Version #1" of the “MyChange” change ID.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="step-3">Step 3<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/07/01/2025-07-01-safe-deployment-of-versioned-workflows/safe-deployment-of-versioned-workflows#step-3" class="hash-link" aria-label="Direct link to Step 3" title="Direct link to Step 3" translate="no">​</a></h4>
<p>Once all workers <strong>v0.3</strong> replace the old worker <strong>v0.2</strong> and all workflows with the DefaultVersion of “MyChange” are <strong>finished</strong>, we can deploy a new worker that starts workflow executions with the new version and doesn’t support the previous logic.</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Git tag: v0.4     </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// MyWorkflow supports: 1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">MyWorkflow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// When GetVersion is executed for the first time, Version #1 will be returned </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetVersion</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"MyChange"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> BarActivity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Worker <strong>v0.4</strong> contains the new workflow code definition that supports the new logic but does not support the previous logic. Therefore, when a StartWorkflowExecution request is processed, a new workflow execution will have Version #1 of the “MyChange” change ID.</p>
<p><img decoding="async" loading="lazy" alt="new-deployment-flow-step-3.png" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/new-deployment-flow-step-3-18b8d4d56479dc6f248d8ee926998807.png" width="1410" height="567" class="img_ev3q"></p>
<p>This change finalizes the safe rollout of the new versioned workflow. At each step, both versions of workers are fully compatible with one another, making rollouts and rollbacks safe.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="differences-with-the-previous-deployment-flow">Differences with the previous deployment flow<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/07/01/2025-07-01-safe-deployment-of-versioned-workflows/safe-deployment-of-versioned-workflows#differences-with-the-previous-deployment-flow" class="hash-link" aria-label="Direct link to Differences with the previous deployment flow" title="Direct link to Differences with the previous deployment flow" translate="no">​</a></h4>
<p>The previous deployment flow for versioned workflows included only Steps 0, 2, and 3. Therefore, a direct upgrade from Step 0 to Step 2 (skipping Step 1) was not safe due to the inability to perform a safe rollback. The new functions enabled customers to have Step 1, thereby making the deployment process safe.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/07/01/2025-07-01-safe-deployment-of-versioned-workflows/safe-deployment-of-versioned-workflows#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion" translate="no">​</a></h2>
<p>The new options introduced into <code>GetVersion</code> address gaps in the Versioning logic that previously led to failed workflow executions. This enhancement improves the safety of deploying versioned workflows, allowing for the separation of code changes from the activation of new logic, making the deployment process more predictable. This extension of <code>GetVersion</code> is a significant improvement that opens the way for future optimizations.</p>]]></content:encoded>
            <category>Deep Dives</category>
            <category>Announcement</category>
        </item>
        <item>
            <title><![CDATA[Adaptive Tasklist Scaler]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2025/06/30/adaptive-tasklist-scaler</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2025/06/30/adaptive-tasklist-scaler</guid>
            <pubDate>Mon, 30 Jun 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[At Uber, we previously relied on a dynamic configuration service to manually control the number of partitions for scalable tasklists. This configuration approach introduced several operational challenges:]]></description>
            <content:encoded><![CDATA[<p>At Uber, we previously relied on a dynamic configuration service to manually control the number of partitions for scalable tasklists. This configuration approach introduced several operational challenges:</p>
<ul>
<li><strong>Error-prone:</strong> Manual updates and deployments were required.</li>
<li><strong>Unresponsive:</strong> Adjustments were typically reactive, often triggered by customer reports or observed backlogs.</li>
<li><strong>Irreversible:</strong> Once increased, the number of partitions was rarely decreased due to the complexity of the two-phase process, especially when anticipating future traffic spikes.</li>
</ul>
<p>To address these issues, we introduced a new component in the Cadence Matching service: <strong>Adaptive Tasklist Scaler</strong>. This component dynamically monitors tasklist traffic and adjusts partition counts automatically. Since its rollout, we've seen a significant reduction in incidents and operational overhead caused by misconfigured tasklists.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-a-scalable-tasklist">What is a Scalable Tasklist?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/06/30/adaptive-tasklist-scaler#what-is-a-scalable-tasklist" class="hash-link" aria-label="Direct link to What is a Scalable Tasklist?" title="Direct link to What is a Scalable Tasklist?" translate="no">​</a></h2>
<p>A <strong>scalable tasklist</strong> is one that supports multiple partitions. Since Cadence’s Matching service is sharded by tasklist, all requests to a specific tasklist are routed to a single Matching host. To avoid bottlenecks and enhance scalability, tasklists can be partitioned so that multiple Matching hosts handle traffic concurrently.</p>
<p>These partitions are transparent to clients. When a request arrives at the Cadence server for a scalable tasklist, the server selects an appropriate partition. More details can be found in <a href="https://github.com/cadence-workflow/cadence/blob/v1.3.1/docs/scalable_tasklist.md" target="_blank" rel="noopener noreferrer">this document</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-is-the-number-of-partitions-manually-configured">How Is the Number of Partitions Manually Configured?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/06/30/adaptive-tasklist-scaler#how-is-the-number-of-partitions-manually-configured" class="hash-link" aria-label="Direct link to How Is the Number of Partitions Manually Configured?" title="Direct link to How Is the Number of Partitions Manually Configured?" translate="no">​</a></h3>
<p>The number of partitions for a tasklist is controlled by two dynamic configuration properties:</p>
<ol>
<li><a href="https://github.com/cadence-workflow/cadence/blob/v1.2.13/common/dynamicconfig/constants.go#L3350" target="_blank" rel="noopener noreferrer"><code>matching.numTasklistReadPartitions</code></a>: Specifies the number of <strong>read</strong> partitions.</li>
<li><a href="https://github.com/cadence-workflow/cadence/blob/v1.2.13/common/dynamicconfig/constants.go#L3344" target="_blank" rel="noopener noreferrer"><code>matching.numTasklistWritePartitions</code></a>: Specifies the number of <strong>write</strong> partitions.</li>
</ol>
<p>To prevent misconfiguration, a guardrail is in place to ensure that the number of read partitions is <strong>never less than</strong> the number of write partitions.</p>
<p>When <strong>increasing</strong> the number of partitions, both properties are typically updated simultaneously. However, due to the guardrail, the order of updates doesn't matter—read and write partitions can be increased in any sequence.</p>
<p>In contrast, <strong>decreasing</strong> the number of partitions is more complex and requires a <strong>two-phase process</strong>:</p>
<ol>
<li><strong>First</strong>, reduce the number of write partitions.</li>
<li><strong>Then</strong>, wait for any backlog in the decommissioned partitions to drain completely.</li>
<li><strong>Finally</strong>, reduce the number of read partitions.</li>
</ol>
<p>Because this process is tedious, error-prone, and backlog-sensitive, it is rarely performed in production environments.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-does-adaptive-tasklist-scaler-work">How Does Adaptive Tasklist Scaler Work?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/06/30/adaptive-tasklist-scaler#how-does-adaptive-tasklist-scaler-work" class="hash-link" aria-label="Direct link to How Does Adaptive Tasklist Scaler Work?" title="Direct link to How Does Adaptive Tasklist Scaler Work?" translate="no">​</a></h2>
<p>The architecture of the adaptive tasklist scaler is shown below:</p>
<p><img decoding="async" loading="lazy" alt="adaptive tasklist scaler architecture" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/architecture-0c083477bee0b8657dc4cea752dc34ba.png" width="1200" height="980" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-migrating-configuration-to-the-database">1. Migrating Configuration to the Database<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/06/30/adaptive-tasklist-scaler#1-migrating-configuration-to-the-database" class="hash-link" aria-label="Direct link to 1. Migrating Configuration to the Database" title="Direct link to 1. Migrating Configuration to the Database" translate="no">​</a></h3>
<p>The first key change was migrating partition count configuration from dynamic config to the Cadence cluster’s database. This allows the configuration to be updated programmatically.</p>
<ul>
<li>The <strong>adaptive tasklist scaler</strong> runs in the root partition only.</li>
<li>It reads and updates the partition count.</li>
<li>Updates propagate to non-root partitions via a <strong>push model</strong>, and to pollers and producers via a <strong>pull model</strong>.</li>
<li>A <strong>version number</strong> is associated with each config. The version only increments through scaler updates, ensuring monotonicity and consistency across components.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-monitoring-tasklist-traffic">2. Monitoring Tasklist Traffic<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/06/30/adaptive-tasklist-scaler#2-monitoring-tasklist-traffic" class="hash-link" aria-label="Direct link to 2. Monitoring Tasklist Traffic" title="Direct link to 2. Monitoring Tasklist Traffic" translate="no">​</a></h3>
<p>The scaler periodically monitors the <strong>write QPS</strong> of each tasklist.</p>
<ul>
<li>If QPS exceeds an upscale threshold for a sustained period, the number of <strong>read and write partitions</strong> is increased proportionally.</li>
<li>If QPS falls below a downscale threshold, only the <strong>write partitions</strong> are reduced initially. The system then waits for drained partitions to clear before reducing the number of <strong>read partitions</strong>, ensuring backlog-free downscaling.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="enabling-adaptive-tasklist-scaler">Enabling Adaptive Tasklist Scaler<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/06/30/adaptive-tasklist-scaler#enabling-adaptive-tasklist-scaler" class="hash-link" aria-label="Direct link to Enabling Adaptive Tasklist Scaler" title="Direct link to Enabling Adaptive Tasklist Scaler" translate="no">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisites">Prerequisites<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/06/30/adaptive-tasklist-scaler#prerequisites" class="hash-link" aria-label="Direct link to Prerequisites" title="Direct link to Prerequisites" translate="no">​</a></h3>
<p>To use this feature, upgrade Cadence to <a href="https://github.com/cadence-workflow/cadence/tree/v1.3.0" target="_blank" rel="noopener noreferrer">v1.3.0 or later</a>.</p>
<p>Also, migrate tasklist partition configurations to the database using <a href="https://github.com/cadence-workflow/cadence/blob/v1.3.0/docs/migration/tasklist-partition-config.md" target="_blank" rel="noopener noreferrer">this guide</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="configuration">Configuration<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/06/30/adaptive-tasklist-scaler#configuration" class="hash-link" aria-label="Direct link to Configuration" title="Direct link to Configuration" translate="no">​</a></h3>
<p>The scaler is governed by the following dynamic configuration parameters:</p>
<ul>
<li><code>matching.enableAdaptiveScaler</code>: Enables the scaler at the tasklist level.</li>
<li><code>matching.partitionUpscaleSustainedDuration</code>: Duration that QPS must stay above threshold before triggering upscale.</li>
<li><code>matching.partitionDownscaleSustainedDuration</code>: Duration below threshold required before triggering downscale.</li>
<li><code>matching.adaptiveScalerUpdateInterval</code>: Frequency at which the scaler evaluates and updates partition counts.</li>
<li><code>matching.partitionUpscaleRPS</code>: QPS threshold per partition that triggers upscale.</li>
<li><code>matching.partitionDownscaleFactor</code>: Factor applied to introduce hysteresis, lowering the QPS threshold for downscaling to avoid oscillations.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="monitoring-and-metrics">Monitoring and Metrics<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/06/30/adaptive-tasklist-scaler#monitoring-and-metrics" class="hash-link" aria-label="Direct link to Monitoring and Metrics" title="Direct link to Monitoring and Metrics" translate="no">​</a></h2>
<p>Several metrics have been introduced to help monitor the scaler’s behavior:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="qps-and-thresholds">QPS and Thresholds<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/06/30/adaptive-tasklist-scaler#qps-and-thresholds" class="hash-link" aria-label="Direct link to QPS and Thresholds" title="Direct link to QPS and Thresholds" translate="no">​</a></h3>
<ul>
<li><code>estimated_add_task_qps_per_tl</code>: Estimated QPS of task additions per tasklist.</li>
<li><code>tasklist_partition_upscale_threshold</code>: Upscale threshold for task additions.</li>
<li><code>tasklist_partition_downscale_threshold</code>: Downscale threshold for task additions.</li>
</ul>
<blockquote>
<p>The <code>estimated_add_task_qps_per_tl</code> value should remain between the upscale and downscale thresholds. If not, the scaler may not be functioning properly.</p>
</blockquote>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="partition-configurations">Partition Configurations<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/06/30/adaptive-tasklist-scaler#partition-configurations" class="hash-link" aria-label="Direct link to Partition Configurations" title="Direct link to Partition Configurations" translate="no">​</a></h3>
<ul>
<li><code>task_list_partition_config_num_read</code>: Number of current <strong>read</strong> partitions.</li>
<li><code>task_list_partition_config_num_write</code>: Number of current <strong>write</strong> partitions.</li>
<li><code>task_list_partition_config_version</code>: Version of the current partition configuration.</li>
</ul>
<p>These metrics are emitted by various components: root and non-root partitions, pollers, and producers. Their values should align under normal conditions, except immediately after updates.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="status-at-uber">Status at Uber<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/06/30/adaptive-tasklist-scaler#status-at-uber" class="hash-link" aria-label="Direct link to Status at Uber" title="Direct link to Status at Uber" translate="no">​</a></h2>
<p>We enabled adaptive tasklist scaler across all Uber clusters in <strong>March 2025</strong>. Since its deployment:</p>
<ul>
<li><strong>Zero incidents</strong> have been reported due to misconfigured tasklists.</li>
<li><strong>Operational workload</strong> related to manual scaling has been eliminated.</li>
<li><strong>Scalability and resilience</strong> of Matching service have improved significantly.</li>
</ul>]]></content:encoded>
            <category>Deep Dives</category>
            <category>Cadence Operations</category>
            <category>cadence-matching</category>
        </item>
        <item>
            <title><![CDATA[Introducing cadence-web v4.0.0]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2025/04/11/2025-04-11-announcing-cadence-web-v4/announcing-cadence-web-v4</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2025/04/11/2025-04-11-announcing-cadence-web-v4/announcing-cadence-web-v4</guid>
            <pubDate>Fri, 11 Apr 2025 16:00:00 GMT</pubDate>
            <description><![CDATA[We've released cadence-web v4.0.0, a complete rewrite of the Cadence Web UI with a modern UI and performance improvements! Learn more about the new features, technology stack, and how this update addresses past challenges for developers and users alike.]]></description>
            <content:encoded><![CDATA[<p>We are excited to announce the release of <strong>cadence-web v4.0.0</strong>—a complete rewrite of the Cadence web app. Cadence has always been about empowering developers to manage complex workflows, and with this release, we not only modernize the web interface by embracing today’s cutting-edge technologies but also strengthen the open source community by aligning our tools with the broader trends seen across the industry.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-new-in-cadence-web-v400">What's new in cadence-web v4.0.0<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/04/11/2025-04-11-announcing-cadence-web-v4/announcing-cadence-web-v4#whats-new-in-cadence-web-v400" class="hash-link" aria-label="Direct link to What's new in cadence-web v4.0.0" title="Direct link to What's new in cadence-web v4.0.0" translate="no">​</a></h2>
<ul>
<li><strong>Revamped UI &amp; Experience</strong> – A fresh, modern interface designed for better usability and efficiency.</li>
<li><strong>Multi-Cluster Support</strong> – The UI can now connect to multiple Cadence clusters.</li>
<li><strong>Performance Improvements</strong> – Faster load times, optimised API calls, and a smoother experience.</li>
</ul>
<p><img decoding="async" loading="lazy" alt="history page comparison" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/v3-v4-history-comparison-9eaff564f6ee77e1ed0d9d605417b62c.png" width="2220" height="615" class="img_ev3q">
<em>Comparison of the workflow history page between the old UI and the new UI</em></p>
<p><img decoding="async" loading="lazy" alt="multi cluster comparison" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/multi-cluster-comparison-abfe4c9b6cac25d9702cd485ea2d47f7.png" width="1955" height="557" class="img_ev3q">
<em>Interaction with a multi-cluster Cadence setup in the old UI vs in the new UI</em></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="challenges-with-the-older-cadence-web">Challenges with the older cadence-web<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/04/11/2025-04-11-announcing-cadence-web-v4/announcing-cadence-web-v4#challenges-with-the-older-cadence-web" class="hash-link" aria-label="Direct link to Challenges with the older cadence-web" title="Direct link to Challenges with the older cadence-web" translate="no">​</a></h2>
<p>The older version of cadence-web had several issues for both users and Cadence developers alike.</p>
<p>Users had to deal with slow loading and performance, and a suboptimal user experience filled with janky errors. Moreover, it did not work very well with multi-cluster setups, since each cadence-web server was tied to a single cluster.</p>
<p>For Uber developers working on cadence-web, the main challenge was a different technology stack and UI framework. cadence-web was written in Vue.js, whereas the frameworks in use at Uber are all React-based. This slowed down developers working on cadence-web because they had to suddenly adapt to working on an entirely different framework. Moreover, the project used outdated tooling, was hard to run, and was not type-safe.</p>
<p>Our internal version of cadence-web used an NPM package as a dependency, which limited our ability to extend it with Uber-specific enhancements. It also had a high dependency on run-time configurations, limiting how much could be tested while running locally.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-development-journey">The development journey<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/04/11/2025-04-11-announcing-cadence-web-v4/announcing-cadence-web-v4#the-development-journey" class="hash-link" aria-label="Direct link to The development journey" title="Direct link to The development journey" translate="no">​</a></h2>
<p>After evaluating multiple open source React-based frameworks, we chose to go with Vercel’s Next.js, which brings with it several of React’s bleeding edge optimizations, such as server components.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-went-into-making-the-new-cadence-web">What went into making the new cadence-web<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/04/11/2025-04-11-announcing-cadence-web-v4/announcing-cadence-web-v4#what-went-into-making-the-new-cadence-web" class="hash-link" aria-label="Direct link to What went into making the new cadence-web" title="Direct link to What went into making the new cadence-web" translate="no">​</a></h3>
<p>We took the migration as an opportunity to make the hop from plain JavaScript to TypeScript, while integrating Jest for testing and ESLint with Prettier for code quality.</p>
<p>For data validation, we chose Zod, a popular schema validation library that provides runtime type checking and automatic type inference. For logging, we went with Pino, a well-established logging library that can integrate with monitoring tools like Sentry.</p>
<p>The UI itself is built with Baseweb, Uber’s open-source component library. Baseweb is heavily integrated with Styletron, so we used that as our CSS-in-JS solution.</p>
<p>To interact with Cadence services, the web UI uses React Query for data management, Next.js API routes as intermediaries, and grpc’s official JavaScript client (<a href="https://www.npmjs.com/package/@grpc/grpc-js" target="_blank" rel="noopener noreferrer">@grpc/grpc-js</a>). Type generation for Cadence endpoints (request and response params) is handled by using <a href="https://www.npmjs.com/package/@grpc/proto-loader" target="_blank" rel="noopener noreferrer">@grpc/proto-loader</a> to generate Typescript types from our existing Protobuf definitions.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="extending-cadence-web-internally">Extending cadence-web internally<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/04/11/2025-04-11-announcing-cadence-web-v4/announcing-cadence-web-v4#extending-cadence-web-internally" class="hash-link" aria-label="Direct link to Extending cadence-web internally" title="Direct link to Extending cadence-web internally" translate="no">​</a></h3>
<p>Since we wanted the ability to extend the codebase for specific use cases, we also designed the code in a modular fashion, allowing pieces of the UI to be added, replaced or removed using simple configurations.</p>
<p>Our internal fork of cadence-web uses a virtual codebase which applies a set of internal overrides to the open source codebase using overlayfs while developing locally, and npm’s merge-dirs package at build time. This allows us to add extensions at will, and also modify certain files internally to meet use case-specific needs. To handle open-source changes to these modified files, we have a validation script that runs on every version update to highlight potential conflicts.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="a-unified-view-for-workflow-history">A unified view for Workflow History<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/04/11/2025-04-11-announcing-cadence-web-v4/announcing-cadence-web-v4#a-unified-view-for-workflow-history" class="hash-link" aria-label="Direct link to A unified view for Workflow History" title="Direct link to A unified view for Workflow History" translate="no">​</a></h3>
<p>Previously, the Workflow History experience was fragmented across multiple disconnected views—Compact, Grid, and JSON—each serving a different purpose but offering little cohesion. Depending on where you started, the experience varied significantly, making it difficult to navigate between views or maintain context. For example, users couldn’t easily locate an event in the compact view and then explore its surrounding context in the grid; they had to search again. Additionally, filtering was only available in the grid view, leaving the others lacking in usability.</p>
<p>This disjointed setup made it hard for users to build intuitive flows or develop habits around history navigation.</p>
<p>With this launch, we've reimagined the entire experience into a single, unified view that works seamlessly across use cases. The compact list and timeline now live side by side, enabling users to quickly locate an event and view its context in the timeline. Filters apply across both views, ensuring consistency and saving time. JSON export remains available, and new features like collapsible events bring the best of both Summary and Full Detail modes into one place.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-get-started">How to Get Started<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/04/11/2025-04-11-announcing-cadence-web-v4/announcing-cadence-web-v4#how-to-get-started" class="hash-link" aria-label="Direct link to How to Get Started" title="Direct link to How to Get Started" translate="no">​</a></h2>
<ul>
<li><strong>GitHub Repository:</strong> You can find cadence-web v4.0.0 in our <a href="https://github.com/cadence-workflow/cadence-web" target="_blank" rel="noopener noreferrer">GitHub repository</a>.</li>
<li><strong>Dockerhub:</strong> cadence-web v4.0.0 is also available on <a href="https://hub.docker.com/r/ubercadence/web" target="_blank" rel="noopener noreferrer">Dockerhub</a>, and  will be fetched by default when you run Cadence using Docker.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What’s Next?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2025/04/11/2025-04-11-announcing-cadence-web-v4/announcing-cadence-web-v4#whats-next" class="hash-link" aria-label="Direct link to What’s Next?" title="Direct link to What’s Next?" translate="no">​</a></h2>
<p>Now that we have a robust and modernized Cadence UI, our long-term plan is to enhance it to add more useful functionality. Our next steps include:</p>
<ul>
<li><strong>Workflow Actions:</strong> Adding more workflow actions such as start, restart, reset, and signal, allowing them to be invoked directly from the UI</li>
<li><strong>Extended Domain Information:</strong> We will be adding more information to the Domain page to help you work with your domains and quickly identify any issues affecting them.</li>
<li><strong>Workflow Diagnostics UI:</strong> Integrating with the new Workflow Diagnostics API to provide detailed insights into failed workflows.</li>
</ul>
<p>We invite you to explore cadence-web v4.0.0 and share your feedback with us. Please feel free to share your feedback with the new Cadence UI in our <a href="http://t.uber.com/cadence-slack" target="_blank" rel="noopener noreferrer">Slack workspace</a>! Your input is invaluable as we continue to evolve this platform.</p>
<p>Happy coding, and thank you for being a part of the Cadence journey!</p>]]></content:encoded>
            <category>Announcement</category>
        </item>
        <item>
            <title><![CDATA[Cadence Repositories Have Moved!]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2024/11/18/cadence-workflows-github-organization</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2024/11/18/cadence-workflows-github-organization</guid>
            <pubDate>Mon, 18 Nov 2024 14:00:00 GMT</pubDate>
            <description><![CDATA[Discover the latest update for Cadence Workflow! Our GitHub repositories have moved to the new cadence-workflow organization. Learn more about the migration, including updated links and how this change supports the growing Cadence community]]></description>
            <content:encoded><![CDATA[<p>We’re excited to announce that all Cadence GitHub repositories have been consolidated under the <a href="https://github.com/cadence-workflow" target="_blank" rel="noopener noreferrer">cadence-workflow</a> organization! 🎉</p>
<p>Previously, Cadence repositories were distributed across multiple organizations at Uber: <a href="https://github.com/uber" target="_blank" rel="noopener noreferrer"><code>uber</code></a>, <a href="https://github.com/uber-go" target="_blank" rel="noopener noreferrer"><code>uber-go</code></a>, <a href="https://github.com/uber-common" target="_blank" rel="noopener noreferrer"><code>uber-common</code></a>. To improve developer cohesiveness and simplify access, the Cadence Core team has migrated all open-source repositories to the <a href="https://github.com/cadence-workflow" target="_blank" rel="noopener noreferrer"><code>cadence-workflow</code></a> organization.</p>
<p>For example, our main repository has moved from:</p>
<p>👉 <a href="https://github.com/cadence-workflow/cadence" target="_blank" rel="noopener noreferrer">uber/cadence</a></p>
<p>To its new home:</p>
<p>👉 <a href="https://github.com/cadence-workflow/cadence" target="_blank" rel="noopener noreferrer">cadence-workflow/cadence</a></p>
<p>You can find the full list of Cadence repositories here 👉 <a href="https://github.com/orgs/cadence-workflow/repositories" target="_blank" rel="noopener noreferrer">orgs/cadence-workflow/repositories</a></p>
<p>This move reflects our continued commitment to growing the Cadence community and making the project even more accessible to contributors and users. Please update your bookmarks and links accordingly.</p>
<p>Thank you for being part of the Cadence journey! 🚀</p>]]></content:encoded>
            <category>Announcement</category>
        </item>
        <item>
            <title><![CDATA[Zonal Isolation for Cadence Workflows]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1</guid>
            <pubDate>Mon, 14 Oct 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[At Uber, we want to achieve regional resilience such that losing a zone within a region can be tolerated without requiring a cross-region failover. We also want to make sure that losing a zone only affects a subset of workload, at most, rather than everything. However, in Cadence-based systems, the workload in a region is distributed randomly across all workers in the region at a “task-level granularity”, which means a workflow may be worked on by any worker in the region where the domain is active. To achieve this goal, we introduced Zonal Isolation for Cadence Workflows - a feature designed to pin workflows to the zone they are started in, so that zonal isolation can be achieved at a workflow-level.]]></description>
            <content:encoded><![CDATA[<p>At Uber, we want to achieve regional resilience such that losing a zone within a region can be tolerated without requiring a cross-region failover. We also want to make sure that losing a zone only affects a subset of workload, at most, rather than everything. However, in Cadence-based systems, the workload in a region is distributed randomly across all workers in the region at a “task-level granularity”, which means a workflow may be worked on by any worker in the region where the domain is active. To achieve this goal, we introduced Zonal Isolation for Cadence Workflows - a feature designed to pin workflows to the zone they are started in, so that zonal isolation can be achieved at a workflow-level.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-zonal-isolation-for-cadence-workflows">What is Zonal Isolation for Cadence Workflows?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1#what-is-zonal-isolation-for-cadence-workflows" class="hash-link" aria-label="Direct link to What is Zonal Isolation for Cadence Workflows?" title="Direct link to What is Zonal Isolation for Cadence Workflows?" translate="no">​</a></h2>
<p>At high-level, Zonal Isolation for Cadence Workflows can be thought in 2 levels:</p>
<ol>
<li><strong>Task-level isolation:</strong> All decision tasks and activity tasks of a workflow are only processed by workers from the zone where the workflow was started</li>
<li><strong>Infrastructure-level isolation:</strong> Within a regional Cadence cluster, workflows are handled by server instances in the same zone where they were started, and the corresponding data is stored in that zone as well.</li>
</ol>
<p>Infrastructure-level isolation is quite challenging to implement as it requires significant changes to the core design of the Cadence server. Due to the complexity involved, support for this feature is not planned for the foreseeable future.</p>
<p>As a result, the focus remains on achieving task-level zonal isolation outside the Cadence server, which offers a more practical and immediate way to improve system resilience. It provides the capability of ensuring that an unhealthy zone (i.e. bad deployment of workers) only affect a subset of workflows (started from a certain zone) rather than every workflow in a Cadence domain.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-zonal-isolation-works-in-cadence">How Zonal Isolation Works in Cadence?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1#how-zonal-isolation-works-in-cadence" class="hash-link" aria-label="Direct link to How Zonal Isolation Works in Cadence?" title="Direct link to How Zonal Isolation Works in Cadence?" translate="no">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="architecture">Architecture<a href="https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1#architecture" class="hash-link" aria-label="Direct link to Architecture" title="Direct link to Architecture" translate="no">​</a></h3>
<p>Here is what the architecture of a zonally isolated Cadence-based system looks like:
<img decoding="async" loading="lazy" alt="zonal isolation overview" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/zone-isolation-3dab642dc554611aa31e398f4f020d63.png" width="1600" height="896" class="img_ev3q">
<em></em></p><p><em>Fig: Workflows started in one zone are only dispatched to workers from the same zone. Colors to emphasize pinning.</em></p><p></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="implementation">Implementation<a href="https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1#implementation" class="hash-link" aria-label="Direct link to Implementation" title="Direct link to Implementation" translate="no">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="determine-the-zone-of-a-workflow-and-workers">Determine the zone of a workflow and workers<a href="https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1#determine-the-zone-of-a-workflow-and-workers" class="hash-link" aria-label="Direct link to Determine the zone of a workflow and workers" title="Direct link to Determine the zone of a workflow and workers" translate="no">​</a></h4>
<p>To ensure that tasks are dispatched to workers in the same zone as the workflows, we must identify the origin zone of both. The zone of a workflow is determined by the origin zone of the StartWorkflowExecution request, while the zone of workers is determined by the origin zone of the PollForDecisionTask and PollForActivityTask requests. There are three possible ways to determine the origin zone for these requests:</p>
<ul>
<li><strong>Uber's Approach:</strong> Let Cadence SDK set the origin zone in the headers of the requests before sending the request to Cadence.</li>
<li><strong>Preferred Approach:</strong> Get the origin zone of the requests from headers set by network infrastructure.</li>
<li>Determine the origin zone of the requests from the zone of the cadence-frontend instance receiving the request, if the network layer has already achieved zonal isolation.</li>
</ul>
<p>The 2nd approach is the ideal one, but Uber's network infrastructure doesn't provide such headers and the network layer is not ready for zonal isolation. As a result, we adopt the 1st approach. At Uber, we have internal libraries in Go and Java acting as wrappers around Cadence SDK injecting necessary configurations. These libraries have been updated to include the origin zone in the request headers using a header called <code>cadence-client-isolation-group</code>.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-dispatch-tasks-to-workers-from-the-same-zone">How to dispatch tasks to workers from the same zone?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1#how-to-dispatch-tasks-to-workers-from-the-same-zone" class="hash-link" aria-label="Direct link to How to dispatch tasks to workers from the same zone?" title="Direct link to How to dispatch tasks to workers from the same zone?" translate="no">​</a></h4>
<p>To implement task-level isolation, we introduce a new dimension to the tasklist — <strong>isolation group</strong>. When a workflow is initiated, the origin zone of the workflow is stored in the database. Each time a decision or activity task is dispatched to cadence-matching, the workflow's origin zone is used as the isolation group for that task.</p>
<p>When a worker sends a <code>PollForDecisionTask</code> or <code>PollForActivityTask</code> request to cadence-matching, the request is labeled with the worker's isolation group (i.e., the worker's zone). Tasks are then dispatched only to poller requests that have the same isolation group, ensuring that tasks are processed by workers in the same zone as the workflow's origin.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-handle-workflows-from-a-drained-zone">How to handle workflows from a drained zone?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1#how-to-handle-workflows-from-a-drained-zone" class="hash-link" aria-label="Direct link to How to handle workflows from a drained zone?" title="Direct link to How to handle workflows from a drained zone?" translate="no">​</a></h4>
<p>In the event of an outage, such as a bad deployment, customers may want to drain workers from a specific zone to mitigate the impact. There are two types of drains that can occur:</p>
<ol>
<li><strong>Implicit drain:</strong> Workers from a zone completely stop operating, either due to failures or manual shutdowns.</li>
<li><strong>Explicit drain:</strong> Customers explicitly mark workers from a zone as drained.</li>
</ol>
<p>Within cadence-matching, a list of pollers is maintained for each tasklist, tracking the zone from which the pollers originate. An implicit drain can be detected by checking whether there are any active pollers from a particular zone. If a zone is drained (either explicitly or implicitly), workflows that were started in that zone will be reassigned and spread to workers in the remaining healthy zones.</p>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-drain-a-zone-explicitly">How to drain a zone explicitly?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1#how-to-drain-a-zone-explicitly" class="hash-link" aria-label="Direct link to How to drain a zone explicitly?" title="Direct link to How to drain a zone explicitly?" translate="no">​</a></h5>
<p>Explicitly draining a zone can be done at two levels:</p>
<ol>
<li><strong>Domain-level drain:</strong> This applies to a specific domain, allowing the zone to be drained only for workflows within that domain.</li>
<li><strong>Cluster-level drain:</strong> This applies to the entire Cadence cluster, draining the zone for all domains and workflows within the cluster.</li>
</ol>
<p>For domain-level drain, the draining status is stored in <a href="https://github.com/cadence-workflow/cadence/blob/v1.2.13/schema/cassandra/cadence/schema.cql#L412" target="_blank" rel="noopener noreferrer"><code>domains</code></a> table. For cluster-level drain, the status is stored in <a href="https://github.com/cadence-workflow/cadence/blob/v1.2.13/schema/cassandra/cadence/schema.cql#L498" target="_blank" rel="noopener noreferrer"><code>cluster_config</code></a> table.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-enable-zonal-isolation">How to enable Zonal Isolation?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1#how-to-enable-zonal-isolation" class="hash-link" aria-label="Direct link to How to enable Zonal Isolation?" title="Direct link to How to enable Zonal Isolation?" translate="no">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="server-update">Server Update<a href="https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1#server-update" class="hash-link" aria-label="Direct link to Server Update" title="Direct link to Server Update" translate="no">​</a></h3>
<p>In order to enable this feature, please upgrade Cadence server to <a href="https://github.com/cadence-workflow/cadence/releases/tag/v1.2.1" target="_blank" rel="noopener noreferrer">v1.2.1</a> or later.</p>
<p><strong>NOTE:</strong> If you're not using the provided main binary located in <code>cmd/server</code>, you must adopt this <a href="https://github.com/cadence-workflow/cadence/blob/v1.2.1/common/rpc/middleware.go#L188" target="_blank" rel="noopener noreferrer">middleware</a>. Depends on the appoach to <a href="https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1#determine-the-zone-of-a-workflow-and-workers">determine the origin zone of requests</a>, you can adopt this <a href="https://github.com/cadence-workflow/cadence/blob/v1.2.1/common/rpc/middleware.go#L229" target="_blank" rel="noopener noreferrer">middleware</a> or build your own middleware using <a href="https://github.com/cadence-workflow/cadence/blob/v1.2.1/common/partition/context.go#L42" target="_blank" rel="noopener noreferrer"><code>partition.ContextWithConfig</code></a> function to inject origin zone into the context.</p>
<p>This feature is controlled by 2 dynamic config properties.</p>
<ul>
<li><code>system.allIsolationGroups</code>: This property provides the list of available zones within a region.</li>
<li><code>system.enableTasklistIsolation</code>: This property enables Zonal Isolation at domain level.
It’s important to note that any update to the <code>system.allIsolationGroups</code> property requires a restart of the cadence-matching service for the changes to take effect. This ensures that the new zone configuration is properly loaded and applied. However, the <code>system.enableTasklistIsolation</code> property can be updated dynamically without requiring a restart, making it more flexible for enabling or disabling Zonal Isolation on a per-domain basis.</li>
</ul>
<p>An example configuration using the file based dynamic configuration could look like this:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">system.allIsolationGroups</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">value</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">constraints</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">value</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"dca1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"dca2"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"dca3"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">constraints</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">clusterName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> prod</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">dca</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">value</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"phx1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"phx2"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"phx3"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">constraints</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">clusterName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> prod</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">phx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">system.enableTasklistIsolation</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">value</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">constraints</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">value</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">constraints</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">domainName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> samples</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">domain</span><br></span></code></pre></div></div>
<p>In this example, the Cadence cluster spans two regions, each containing three zones: <code>dca1</code>, <code>dca2</code>, <code>dca3</code> in the <code>dca</code> region and <code>phx1</code>, <code>phx2</code>, <code>phx3</code> in the <code>phx</code> region. Zonal isolation is enabled only for the <code>samples-domain</code>, while it remains disabled for other domains.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="sdk-update">SDK Update<a href="https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1#sdk-update" class="hash-link" aria-label="Direct link to SDK Update" title="Direct link to SDK Update" translate="no">​</a></h3>
<p>NOTE: This update is only necessary if you're using the 1st approach to <a href="https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1#determine-the-zone-of-a-workflow-and-workers">determine the origin zone of requests</a>.</p>
<p>To support Zonal Isolation, please upgrade your SDK versions:</p>
<ul>
<li><strong>Go SDK:</strong> Upgrade to <a href="https://github.com/cadence-workflow/cadence-go-client/releases/tag/v1.0.2" target="_blank" rel="noopener noreferrer">v1.0.2</a> or later.</li>
<li><strong>Java SDK:</strong> Upgrade to <a href="https://github.com/cadence-workflow/cadence-java-client/releases/tag/v3.9.0" target="_blank" rel="noopener noreferrer">v3.9.0</a> or later.</li>
</ul>
<p><strong>For Java SDK users</strong>, set the <a href="https://github.com/cadence-workflow/cadence-java-client/blob/v3.9.0/src/main/java/com/uber/cadence/serviceclient/ClientOptions.java#L83" target="_blank" rel="noopener noreferrer"><code>isolationGroup</code></a> field to the zone of the instance when creating <code>serviceClient</code>.</p>
<p><strong>For Go SDK users</strong>, set the <a href="https://github.com/cadence-workflow/cadence-go-client/blob/v1.0.2/internal/worker.go#L132" target="_blank" rel="noopener noreferrer"><code>isolationGroup</code></a> field to the zone of the instance when creating <code>Worker</code>. Additionally, you need to use <a href="https://github.com/cadence-workflow/cadence-go-client/blob/v1.0.2/isolationgroup/wrapper.go#L29C39-L29C70" target="_blank" rel="noopener noreferrer">this method</a> to wrap <code>workflowserviceclient.Interface</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-drain-a-zone-explicitly-1">How to drain a zone explicitly?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1#how-to-drain-a-zone-explicitly-1" class="hash-link" aria-label="Direct link to How to drain a zone explicitly?" title="Direct link to How to drain a zone explicitly?" translate="no">​</a></h2>
<p>Drains can be done via the <a href="https://github.com/cadence-workflow/cadence-idl/blob/50a4ee241e50c6baab8e5d47540b176c5ee022a4/proto/cadence-workflow/cadence/admin/v1/service.proto#L125" target="_blank" rel="noopener noreferrer">Admin APIs</a> of cadence-frontend or CLI.</p>
<p>You can check the help message for the CLI by running:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cadence admin isolation-groups </span><span class="token parameter variable" style="color:#36acaa">-h</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="monitoring">Monitoring<a href="https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1#monitoring" class="hash-link" aria-label="Direct link to Monitoring" title="Direct link to Monitoring" translate="no">​</a></h2>
<p>A new metric is introduced to help detect the leakage of tasks and skewness of traffic.</p>
<p><code>isolation_task_matches_per_tl</code>: This is a counter that counts the number of tasks polled by workers. The metric is tagged with the domain, tasklist name, tasklist type, the origin zone of the workflow and the origin zone of the worker polling the task.</p>
<p>This metric can be used in the following ways:</p>
<p><strong>Detecting task leakage:</strong> By grouping tasks based on the origin zones of both the workflows and workers, you can identify tasks that have leaked, i.e., tasks assigned to workers in zones different from the workflow's origin zone.</p>
<p><strong>Identifying traffic skewness:</strong> By grouping tasks based solely on the origin zones of workflows, you can determine if traffic is disproportionately distributed among the zones, helping to detect any uneven load or traffic imbalance across zones.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="status-at-uber">Status at Uber<a href="https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1#status-at-uber" class="hash-link" aria-label="Direct link to Status at Uber" title="Direct link to Status at Uber" translate="no">​</a></h2>
<ul>
<li>We launched this feature at Uber in July 2023. More than 100 domains have Zonal Isolation enabled.</li>
<li>However, as of 2024, the rollout of Zonal Isolation is paused due to a traffic skewness issue:<!-- -->
<ul>
<li>Some customers have highly skewed traffic that some zones have more workflows than other zones, but the number of workers are evenly distributed in all zones. Enabling Zonal Isolation for the customers will decrease the utilization of their workers and may cause high latency for the customers.</li>
</ul>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="next-step">Next Step<a href="https://cadenceworkflow.io/Cadence-Docs/blog/zonal-isolation-v1/zonal-isolation-v1#next-step" class="hash-link" aria-label="Direct link to Next Step" title="Direct link to Next Step" translate="no">​</a></h2>
<p>Currently, Zonal Isolation is implemented as <strong>hard isolation</strong>, where tasks are strictly limited to the same zone as the originating workflow. To address the traffic skewness issue, we are working on iterating this feature to introduce <strong>soft isolation</strong>. This relaxed version will allow for some task leakage between zones if traffic skewness is detected, ensuring better worker utilization and reducing latency.</p>
<p>This enhancement is one of our major ongoing projects, and we plan to share more details in a future blog post once it is launched.</p>]]></content:encoded>
            <category>Deep Dives</category>
            <category>Cadence Operations</category>
        </item>
        <item>
            <title><![CDATA[Announcement: Cadence Helm Charts v0 Release]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2024/10/01/announcing-cadence-helm-charts-v0</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2024/10/01/announcing-cadence-helm-charts-v0</guid>
            <pubDate>Tue, 01 Oct 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[We’ve heard your feedback: deploying Cadence has been a challenge, especially with limited documentation on operational aspects. So far, we’ve only provided a few docker compose files to help you get started on a development machine. However, deploying and managing Cadence at scale requires a deep understanding of underlying services, configurations and their dependencies.]]></description>
            <content:encoded><![CDATA[<p>We’ve heard your feedback: deploying Cadence has been a challenge, especially with limited documentation on operational aspects. So far, we’ve only provided a few <a href="https://github.com/cadence-workflow/cadence/tree/master/docker" target="_blank" rel="noopener noreferrer">docker compose files</a> to help you get started on a development machine. However, deploying and managing Cadence at scale requires a deep understanding of underlying services, configurations and their dependencies.</p>
<p>To address these challenges, we’re launching several initiatives to make it easier to deploy and operate Cadence clusters. These include deployment specs for common scenarios, monitoring dashboards, alerts, runbooks, and more comprehensive documentation.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introducing-cadence-kubernetes-helm-chart-v0">Introducing Cadence Kubernetes Helm Chart v0<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/10/01/announcing-cadence-helm-charts-v0#introducing-cadence-kubernetes-helm-chart-v0" class="hash-link" aria-label="Direct link to Introducing Cadence Kubernetes Helm Chart v0" title="Direct link to Introducing Cadence Kubernetes Helm Chart v0" translate="no">​</a></h2>
<p>Today, we are happy to announce the release of <a href="https://github.com/cadence-workflow/cadence-charts" target="_blank" rel="noopener noreferrer">Cadence Kubernetes Helm Chart v0</a>. This will be the starting point for standardizing Cadence deployments on Kubernetes. We chose Kubernetes because it's the leading compute platform, but Cadence remains flexible and can run on any infrastructure.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-get-started">How to Get Started<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/10/01/announcing-cadence-helm-charts-v0#how-to-get-started" class="hash-link" aria-label="Direct link to How to Get Started" title="Direct link to How to Get Started" translate="no">​</a></h2>
<p><a href="https://helm.sh/" target="_blank" rel="noopener noreferrer">Helm</a> must be installed to use the charts.  Please refer to Helm's <a href="https://helm.sh/docs" target="_blank" rel="noopener noreferrer">documentation</a> to get started.</p>
<p>Once Helm has been set up correctly, add the repo as follows:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">helm repo </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> cadence https://cadence-workflow.github.io/cadence-charts</span><br></span></code></pre></div></div>
<p>If you had already added this repo earlier, run <code>helm repo update</code> to retrieve the latest versions of the packages.  You can then run <code>helm search repo cadence</code> to see the charts.</p>
<p>To install the cadence chart:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">helm </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> my-cadence cadence/cadence</span><br></span></code></pre></div></div>
<p>To uninstall the chart:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">helm delete my-cadence</span><br></span></code></pre></div></div>
<p>See <a href="https://github.com/cadence-workflow/cadence-charts/blob/main/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">CONTRIBUTING.md</a> for details on how to validate the deployment by running sample workflows.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="current-state-of-the-chart">Current State of the Chart<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/10/01/announcing-cadence-helm-charts-v0#current-state-of-the-chart" class="hash-link" aria-label="Direct link to Current State of the Chart" title="Direct link to Current State of the Chart" translate="no">​</a></h2>
<p>There were a few community-created Cadence Helm charts but they were not actively maintained and had a few glitches that Cadence team @Uber wasn't able to provide support for. With the introduction of the new official Cadence Helm chart, our team is committed to provide support and evolve it with input from community.</p>
<p>The v0 chart contains only the basics at the moment:</p>
<ul>
<li>Cadence backend services as separate deployments: frontend, history, matching, worker.</li>
<li>Customizable replica counts and resource limitations.</li>
<li>Customizable dynamic config as a configmap.</li>
<li>A single instance ephemeral Cassandra container. This is included so that no external dependency is required to get started. Ideally you should have your own external (hosted or managed) DB instance that you can specify in values.yaml.</li>
<li>The chart comes with <code>cadence:master-auto-setup</code> as the default image and capable of setting up Cassandra DB schema on first installation.</li>
</ul>
<p>What is (obviously) missing:</p>
<ul>
<li>Support for advanced visibility stores like Elasticsearch or Pinot.</li>
<li>Support for persistent plugins configurations besides Cassandra.</li>
<li>Support for fully customizable service config via values.yaml.</li>
<li>Metrics integration with Prometheus (and more out of the box prometheus dashboards)</li>
<li>Custom annotations/lables/tolerations etc.</li>
<li>Support for ingress</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="next-steps">Next Steps<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/10/01/announcing-cadence-helm-charts-v0#next-steps" class="hash-link" aria-label="Direct link to Next Steps" title="Direct link to Next Steps" translate="no">​</a></h2>
<p>Since this is an early release, we would love to hear from you. Feel free to start <a href="https://github.com/cadence-workflow/cadence-charts/discussions" target="_blank" rel="noopener noreferrer">discussions</a> or report <a href="https://github.com/cadence-workflow/cadence-charts/issues" target="_blank" rel="noopener noreferrer">issues</a>.</p>
<p>Also check out the <a href="https://github.com/cadence-workflow/cadence-charts/blob/main/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">contribution guideline</a> if you are interested to contribute. Don't hesitate to send a PR and ping us over slack if we miss it.</p>
<p>P.S. Huge thanks to our summer intern <a href="https://github.com/nikitab7" target="_blank" rel="noopener noreferrer">Nikita Bhardwaj</a> for kickstarting the Cadence Helm charts initiative.</p>]]></content:encoded>
            <category>Announcement</category>
        </item>
        <item>
            <title><![CDATA[Minimizing blast radius in Cadence: Introducing Workflow ID-based Rate Limits]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2024/09/05/workflow-specific-rate-limits</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2024/09/05/workflow-specific-rate-limits</guid>
            <pubDate>Thu, 05 Sep 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[At Uber, we run several big multitenant Cadence clusters with hundreds of domains in each. The clusters being multi-tenant means potential noisy neighbor effects between domains.]]></description>
            <content:encoded><![CDATA[<p>At Uber, we run several big multitenant Cadence clusters with hundreds of domains in each. The clusters being multi-tenant means potential <a href="https://en.wikipedia.org/wiki/Cloud_computing_issues#Performance_interference_and_noisy_neighbors" target="_blank" rel="noopener noreferrer">noisy neighbor</a> effects between domains.</p>
<p>An essential aspect of avoiding this is managing how workflows interact with our infrastructure to prevent any single workflow from causing instability for the whole cluster. To this end, we are excited to introduce Workflow ID-based rate limits — a new feature designed to protect our clusters from problematic workflows and ensure stability across the board.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-workflow-id-based-rate-limits">Why Workflow ID-based Rate Limits?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/09/05/workflow-specific-rate-limits#why-workflow-id-based-rate-limits" class="hash-link" aria-label="Direct link to Why Workflow ID-based Rate Limits?" title="Direct link to Why Workflow ID-based Rate Limits?" translate="no">​</a></h2>
<p>We already have rate limits for how many requests can be sent to a domain. However, since Cadence is sharded on the workflow ID, a user-provided input, an overused workflow with a particular id might overwhelm a shard by making too many requests. There are two main ways this happens:</p>
<ol>
<li>A user starts, or signals the same workflow ID too aggressively,</li>
<li>A workflow starts too many activities over a short period of time (e.g. thousands of activities in seconds).</li>
</ol>
<p>For example, the following workflow would cause issues for Cadence. It would create huge amounts of traffic to a single shard in a very small time frame:</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Workflow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> input sampleInput</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> elem </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> longList </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> QuickActivity</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> elem</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>This heavy load creates what we call <em>hot shards</em>. Hot shards degrade performance not just for the workflow causing the issue, but for all workflows that interact with the affected shard. This can grow to a point where the whole cluster becomes unstable.</p>
<p>Now, with Workflow ID-based rate limits, we limit the number of external calls and actions per second for each individual workflow, reducing the blast radius (impact on the cluster) of a badly behaved workflow to an absolute minimum where only the offending workflow is impacted.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-not-shard-rate-limits">Why <em>not</em> Shard Rate Limits?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/09/05/workflow-specific-rate-limits#why-not-shard-rate-limits" class="hash-link" aria-label="Direct link to why-not-shard-rate-limits" title="Direct link to why-not-shard-rate-limits" translate="no">​</a></h2>
<p>An obvious question is “why don’t we rate limit the requests to the shard?”. After all, the shard is what we want to protect. We have several reasons for choosing to rate limit the workflow ID instead of the shard:</p>
<ul>
<li><strong>Hashing</strong> The workflow ID to shard is random. This means that rate limiting a workflow is a good proxy for rate limiting a shard. The likelihood that many requests from different workflows hit the same shard is very low.</li>
<li><strong>Communication</strong> It is easy to explain to a user that their domain is rate limited because they are sending too many requests to a specific workflow ID. Shards are an internal implementation detail that users should not have to worry about.</li>
<li><strong>Noisy neighbors</strong> Shards are shared across the different domains in a Cadence cluster. If a user is sending too many requests to a shard, we would choose to rate limit requests to that shard. Since other users in other domains are also using the shard, they will also be rate limited.
Rate limiting users of a healthy domain because of requests from a completely different domain goes against the isolation the domains are meant to ensure.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-does-it-work">How Does It Work?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/09/05/workflow-specific-rate-limits#how-does-it-work" class="hash-link" aria-label="Direct link to How Does It Work?" title="Direct link to How Does It Work?" translate="no">​</a></h2>
<p>Workflow ID-based rate limits are set for all workflow IDs in a domain. If the external limit for a domain is e.g. set to 100 it means that any single workflow ID in that domain can at most be signaled 100 times a second. The rate limits are implemented in two main areas:</p>
<ol>
<li>
<p><strong>External Calls</strong> Cadence limits the number of requests per second for each workflow ID, which includes operations like starting, querying, or signaling a workflow. If this limit is exceeded, a ServiceBusyError with message “Too many requests for the workflow ID” is triggered, indicating that the rate limit for the workflow has been reached.</p>
</li>
<li>
<p><strong>Actions Within a Workflow</strong> This limit controls the number of tasks processed per second within a workflow, focusing on managing decision tasks and activity tasks. When these limits are reached, Cadence slows down task processing without requiring any intervention from the user, though they might notice an increase in task execution time, eventually causing timeouts.</p>
</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-do-i-enable-it">How do I Enable It?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/09/05/workflow-specific-rate-limits#how-do-i-enable-it" class="hash-link" aria-label="Direct link to How do I Enable It?" title="Direct link to How do I Enable It?" translate="no">​</a></h3>
<p>The limits are controlled using six dynamic config properties, three for the internal limits, and a corresponding three for the external limits, all with a domain filter, so the limits can be controlled for each domain.</p>
<ul>
<li>history.workflowIDCacheInternalEnabled<br>
<!-- -->history.workflowIDCacheExternalEnabled<!-- -->
<ul>
<li>Controls if the statistics needed to do the rate limiting should be collected. The feature keeps an in-memory record in the history service for each workflow ID.</li>
</ul>
</li>
<li>history.workflowIDInternalRPS<br>
<!-- -->history.workflowIDExternalRPS<!-- -->
<ul>
<li>Sets the number of requests allowed per second per workflow in a particular domain.</li>
</ul>
</li>
<li>history.workflowIDExternalRateLimitEnabled<br>
<!-- -->history.workflowIDInternalRateLimitEnabled<!-- -->
<ul>
<li>Set whether rate limiting should happen. Setting this to false allows us to see which domains <em>would have</em> been rate limited and adjust them before enforcing the limits.</li>
</ul>
</li>
</ul>
<p>An example configuration using the file based dynamic configuration could look like this:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">history.workflowIDCacheExternalEnabled</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">value</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">constraints</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">history.workflowIDExternalRateLimitEnabled</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">value</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">constraints</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">domainName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> samples</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">domain</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">value</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">constraints</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">history.workflowIDExternalRPS</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">value</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">constraints</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Here only the external rate limits are enabled. The internal rate limits have the same structure. We see that ‌the rate limiting is enabled for all domains, with a max RPS of 100. The domain samples-domain is however running in shadow mode, so its requests are not rate limited, but metrics and logs are still emitted.</p>
<p>The exact RPS to set for a specific domain and cluster, depends on many things, such as the number of shards, the selected persistent layer, the general load on the cluster etc.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="monitoring-and-troubleshooting">Monitoring and Troubleshooting<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/09/05/workflow-specific-rate-limits#monitoring-and-troubleshooting" class="hash-link" aria-label="Direct link to Monitoring and Troubleshooting" title="Direct link to Monitoring and Troubleshooting" translate="no">​</a></h2>
<p>The new feature introduces both new metrics and new logs. The new logs help us find workflows that are being rate limited, while the new metrics let us see if domains are being rate limited, and how close to being rate limited they are.</p>
<p>There are four new metrics, two for internal limits and two corresponding metrics for external limits, all emitted from history.</p>
<ul>
<li>workflow_id_external_requests_ratelimited<br>
<!-- -->workflow_id_internal_requests_ratelimited<!-- -->
<ul>
<li>This is a counter that counts the number of rate limited requests. The metric is tagged with the domain, so we can track the rate limiting per domain.</li>
</ul>
</li>
<li>workflow_id_external_requests_max_requests_per_second<br>
<!-- -->workflow_id_internal_requests_max_requests_per_second<!-- -->
<ul>
<li>This is a timer metric. The upper series gives the max number of requests to a single workflow ID. This is again tagged with the domain, so we can for each domain see how close its workflows are to the limit.</li>
</ul>
</li>
</ul>
<p>These metrics let us monitor and alert on the new rate limits. Additionally, when breaking a rate limit, the history service will emit an info log with the message “Rate limiting workflowID”, these logs are tagged with the workflowID that is being limited, so it is easy to find the offending workflow. An example log would look like this:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"level"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"info"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"ts"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"2024-09-02T08:47:12.843Z"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"msg"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"Rate limiting workflowID"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"service"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"cadence-history"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"request-type"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"external"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"wf-domain-id"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"fc0c7fcb-5796-4c80-b0d7-10bbbc66614e"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"wf-domain-name"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"samples-domain"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"wf-id"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"test"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"logging-call-at"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"cache.go:175"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/09/05/workflow-specific-rate-limits#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion" translate="no">​</a></h2>
<p>Implementing these rate limits highly improves the reliability of a Cadence cluster, as users now cannot send too many requests to a single shard. This fine-grained control helps in maintaining optimal performance and enhances the ability to forecast and mitigate potential issues before they impact the service.</p>
<p>Workflow ID-based rate limits are a significant step forward in our ongoing effort to provide a robust and efficient workflow management service. By preventing hot shards and ensuring equitable resource distribution, we can offer more reliable performance, even under peak loads. We encourage all Cadence users to familiarize themselves with these new limits and adjust their workflow configurations to achieve optimal results.</p>]]></content:encoded>
            <category>Deep Dives</category>
        </item>
        <item>
            <title><![CDATA[2024 Cadence Yearly Roadmap Update]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update</guid>
            <pubDate>Thu, 11 Jul 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Introduction]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction" translate="no">​</a></h2>
<p>If you haven’t heard about Cadence, this section is for you. In a short description, Cadence is a code-driven workflow orchestration engine. The definition itself may not tell enough, so it would help splitting it into three parts:</p>
<ul>
<li>What’s a workflow? (everyone has a different definition)</li>
<li>Why does it matter to be code-driven?</li>
<li>Benefits of Cadence</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-a-workflow">What is a Workflow?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#what-is-a-workflow" class="hash-link" aria-label="Direct link to What is a Workflow?" title="Direct link to What is a Workflow?" translate="no">​</a></h3>
<p><img decoding="async" loading="lazy" alt="workflow.png" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/workflow-84ef76d93c7ff138714a0aa7c9b92841.png" width="650" height="394" class="img_ev3q"></p>
<p>In the simplest definition, it is “a multi-step execution”. Step here represents individual operations that are a little heavier than small in-process function calls. Although they are not limited to those: it could be a separate service call, processing a large dataset, map-reduce, thread sleep, scheduling next run, waiting for an external input, starting a sub workflow etc. It’s anything a user thinks as a single unit of logic in their code. Those steps often have dependencies among themselves. Some steps, including the very first step, might require external triggers (e.g. button click) or schedules. In the more broader meaning, any multi-step function or service is a workflow in principle.</p>
<p>While the above is a more correct way to define workflows, specialized workflows are more widely known: such as data pipelines, directed acyclic graphs, state machines, cron jobs, (micro)service orchestration, etc. This is why typically everyone has a different workflow meaning in mind. Specialized workflows also have simplified interfaces such as UI, configs or a DSL (domain specific language) to make it easy to express the workflow definition.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="code-driven-workflows">Code-Driven Workflows<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#code-driven-workflows" class="hash-link" aria-label="Direct link to Code-Driven Workflows" title="Direct link to Code-Driven Workflows" translate="no">​</a></h3>
<p>Over time, any workflow interface evolves to support more scenarios. For any non-code  (UI, config, DSL) technology, this means more APIs, concepts and tooling. However, eventually, the technology’s capabilities will be limited by its interface itself. Otherwise the interface will get more complicated to operate.</p>
<p>What happens here is users love the seamless way of creating workflow applications and try to fit more scenarios into it. Natural user tendency is to be able to write any program with such simplicity and confidence.</p>
<p>Given this natural evolution of workflow requirements, it’s better to have a code-driven workflow orchestration engine that can meet any future needs with its powerful expressiveness. On top of this, it is ideal if the interface is seamless, where engineers learn as little as possible and change almost nothing in their local code to write a distributed and durable workflow code. This would virtually remove any limitation and enable implementing any service as a workflow. This is what Cadence aims for.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="benefits">Benefits<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#benefits" class="hash-link" aria-label="Direct link to Benefits" title="Direct link to Benefits" translate="no">​</a></h3>
<p><img decoding="async" loading="lazy" alt="cadence-benefits.png" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/cadence-benefits-2bab00edd6033ae128d39367af8ed72a.png" width="694" height="360" class="img_ev3q"></p>
<p>With Cadence, many overheads that need to be built for any well-supported service come for free. Here are some highlights (see <a href="http://cadenceworkflow.io/" target="_blank" rel="noopener noreferrer">cadenceworkflow.io</a>):</p>
<ul>
<li>Disaster recovery is supported by default through data replication and failovers</li>
<li>Strong multi tenancy support in Cadence clusters. Capacity and traffic management.</li>
<li>Users can use Cadence APIs to start and interact with their workflows instead of writing new APIs for them</li>
<li>They can schedule their workflows (distributed cron, scheduled start) or any step in their workflows</li>
<li>They have tooling to get updates or cancel their workflows.</li>
<li>Cadence comes with default metrics and logging support so users already get great insights about their workflows without implementing any observability tooling.</li>
<li>Cadence has a web UI where users can list and filter their workflows, inspect workflow/activity inputs and outputs.</li>
<li>They can scale their service just like true stateless services even though their workflows maintain a certain state.</li>
<li>Behavior on failure modes can easily be configured with a few lines, providing high reliability.</li>
<li>With Cadence testing capabilities, they can write unit tests or test against production data to prevent backward incompatibility issues.</li>
<li>…</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="project-support">Project Support<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#project-support" class="hash-link" aria-label="Direct link to Project Support" title="Direct link to Project Support" translate="no">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="team">Team<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#team" class="hash-link" aria-label="Direct link to Team" title="Direct link to Team" translate="no">​</a></h3>
<p>Today the Cadence team comprises 26 people. We have people working from Uber’s US offices (Seattle, San Francisco and Sunnyvale) as well as Europe offices (Aarhus-DK and Amsterdam-NL).</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="community">Community<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#community" class="hash-link" aria-label="Direct link to Community" title="Direct link to Community" translate="no">​</a></h3>
<p>Cadence is an actively built open source project. We invest in both our internal and open source community (<a href="http://t.uber.com/cadence-slack" target="_blank" rel="noopener noreferrer">Slack</a>, <a href="https://github.com/cadence-workflow/cadence/issues" target="_blank" rel="noopener noreferrer">Github</a>), responding to new features and enhancements.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="scale">Scale<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#scale" class="hash-link" aria-label="Direct link to Scale" title="Direct link to Scale" translate="no">​</a></h3>
<p>It’s one of the most popular platforms at Uber executing ~100K workflow updates per second. There are about 30 different Cadence clusters, several of which serve hundreds of domains. There are ~1000 domains (use cases) varying from tier 0 (most critical) to tier 5 scenarios.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="managed-solutions">Managed Solutions<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#managed-solutions" class="hash-link" aria-label="Direct link to Managed Solutions" title="Direct link to Managed Solutions" translate="no">​</a></h3>
<p>While Uber doesn’t officially sell a managed Cadence solution, there are companies (e.g. <a href="https://www.instaclustr.com/platform/managed-cadence/" target="_blank" rel="noopener noreferrer">Instaclustr</a>) in our community that we work closely with selling Managed Cadence. Due to efficiency investments and other factors, it’s significantly cheaper than its competitors. It can be run in users’ on-prem machines or their cloud service of choice. Pricing is defined based on allocated hosts instead of number of requests so users can get more with the same resources by utilizing multi-tenant clusters.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="after-v1-release">After V1 Release<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#after-v1-release" class="hash-link" aria-label="Direct link to After V1 Release" title="Direct link to After V1 Release" translate="no">​</a></h2>
<p>Last year, around this time we announced <a href="https://www.uber.com/blog/announcing-cadence/" target="_blank" rel="noopener noreferrer">Cadence V1</a> and shared our roadmap. In this section we will talk about updates since then. At a high level, you will notice that we continue investing in high reliability and efficiency while also developing new features.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="frequent-releases">Frequent Releases<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#frequent-releases" class="hash-link" aria-label="Direct link to Frequent Releases" title="Direct link to Frequent Releases" translate="no">​</a></h3>
<p>We announced plans to make more frequent releases last year and started making more frequent releases. Today we aim to release biweekly and sometimes release as frequently as weekly. About the format, we listened to our community and heard about having too frequent releases potentially being painful. Therefore, we decided to increment the patch version with releases while incrementing the minor version close to quarterly. This helped us ship much more robust releases and improved our reliability. Here are some highlights:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="zonal-isolation">Zonal Isolation<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#zonal-isolation" class="hash-link" aria-label="Direct link to Zonal Isolation" title="Direct link to Zonal Isolation" translate="no">​</a></h3>
<p>Cadence clusters have already been regionally isolated until this change. However, in the cloud, inter-zone communications matter as they are more expensive and their latencies are higher. Zones can individually have problems without impacting other cloud zones. In a regional architecture, a single zone problem might impact every request; however, with zonal isolation traffic from a zone with issues can easily be failed over to other zones, eliminating its impact on the whole cluster. Therefore, we implemented zonal isolation keeping domain traffic inside a single zone to help improve efficiency and reliability.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="narrowing-blast-radius">Narrowing Blast Radius<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#narrowing-blast-radius" class="hash-link" aria-label="Direct link to Narrowing Blast Radius" title="Direct link to Narrowing Blast Radius" translate="no">​</a></h3>
<p>When there are issues in a Cadence cluster, it’s often from a single misbehaving workflow. When this happens the whole domain or the cluster could have had issues until the specific workflow is addressed. With this change, we are able to contain the issue only to the offending workflow without impacting others. This is the narrowest blast radius possible.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="async-apis">Async APIs<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#async-apis" class="hash-link" aria-label="Direct link to Async APIs" title="Direct link to Async APIs" translate="no">​</a></h3>
<p>At Uber, there are many batch work streams that run a high number of workflows (thousands to millions) at the same time causing bottlenecks for Cadence clusters, causing noisy neighbor issues. This is because StartWorkflow and SignalWorkflow APIs are synchronous, which means when Cadence acks the user requests are successfully saved in their workflow history.</p>
<p>Even after successful initiations, users would then need to deal with high concurrency. This often means constant worker cache thrashing, followed by history rebuilds at every update, increasing workflow execution complexity to O(n^2) from O(n). Alternatively, they would need to quickly scale out and down their service hosts in a very short amount of time to avoid this.</p>
<p>When we took a step back and analyzed such scenarios, we realized that users simply wanted to “complete N workflows (jobs) in K time”. The guarantees around starts and signals were not really important for their use cases. Therefore, we implemented async versions of our sync API, by which we can control the consumption rate, guaranteeing the fastest execution with no disruption in the cluster.</p>
<p>Later this year, we plan to expand this feature to cron workflows and timers as well.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="pinot-as-visibility-store">Pinot as Visibility Store<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#pinot-as-visibility-store" class="hash-link" aria-label="Direct link to Pinot as Visibility Store" title="Direct link to Pinot as Visibility Store" translate="no">​</a></h3>
<p><a href="https://pinot.apache.org/" target="_blank" rel="noopener noreferrer">Apache Pinot</a> is becoming popular due to its cost efficient nature. Several teams reported significant savings by changing their observability storage to Pinot. Cadence now has a Pinot plugin for its visibility store. We are still rolling out this change. Latencies and cost savings will be shared later.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="code-coverage">Code Coverage<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#code-coverage" class="hash-link" aria-label="Direct link to Code Coverage" title="Direct link to Code Coverage" translate="no">​</a></h3>
<p>We have received many requests from our community to actively contribute to our codebase, especially after our V1 release. While we have been already collaborating with some companies, this is a challenge with individuals who are just learning about Cadence. One of the main reasons was to avoid bugs that can be introduced.</p>
<p>While Cadence has many integration tests, its unit test coverage was lower than desired. With better unit test coverage we can catch changes that break previous logic and prevent them getting into the main branch. Our team covered additional 50K+ lines in various Cadence repos. We hope to bring our code coverage to 85%+ by the end of year so we can welcome such inquiries a lot easier.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="replayer-improvements">Replayer Improvements<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#replayer-improvements" class="hash-link" aria-label="Direct link to Replayer Improvements" title="Direct link to Replayer Improvements" translate="no">​</a></h3>
<p>This is still an ongoing project. As mentioned in our V1 release, we are revisiting some core parts of Cadence where less-than-ideal architectural decisions were made in the past. Replayer/shadower is one of such parts. We have been working on improving its precision, eliminating false negatives and positives.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="global-rate-limiters">Global Rate Limiters<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#global-rate-limiters" class="hash-link" aria-label="Direct link to Global Rate Limiters" title="Direct link to Global Rate Limiters" translate="no">​</a></h3>
<p>Cadence rate limiters are equally distributed across zones and hosts. However, when the user's traffic is skewed, rate limits can get activated even though the user has more capacity. To avoid this, we built global rate limiters. This will make rate limits much more predictable and capacity management a lot easier.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="regular-failover-drills">Regular Failover Drills<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#regular-failover-drills" class="hash-link" aria-label="Direct link to Regular Failover Drills" title="Direct link to Regular Failover Drills" translate="no">​</a></h3>
<p>Cadence has been performing monthly regional and zonal failover drills to ensure its failover operations are working properly in case we need it. We are failing over hundreds of domains at the same time to validate the scale of this operation, capacity elasticity and correctness of workflows.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="cadence-web-v4">Cadence Web v4<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#cadence-web-v4" class="hash-link" aria-label="Direct link to Cadence Web v4" title="Direct link to Cadence Web v4" translate="no">​</a></h3>
<p>We are migrating Cadence web from Vue.js to React.js to use a more modern infrastructure and to have better feature velocity. We are about 70% complete with this migration and hope to release the new version of it soon.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="code-review-time-non-determinism-checks">Code Review Time Non-determinism Checks<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#code-review-time-non-determinism-checks" class="hash-link" aria-label="Direct link to Code Review Time Non-determinism Checks" title="Direct link to Code Review Time Non-determinism Checks" translate="no">​</a></h3>
<p>(This is an internal-only feature that we hope to release soon) Cadence non-determinism errors and versioning were common pain points for our customers. There are available tools but they require ongoing effort to validate. We have built a tool that generates a shadower test with a single line command (one time only operation) and continuously validates any code change against production data.</p>
<p>This feature reduced the detect-and-fix time from days/weeks to minutes. Just by launching this feature to the domains with the most non-determinism errors, the number of related incidents reduced by 40%. We have already blocked 500+ diffs that would potentially impact production negatively. This boosted our users’ confidence in using Cadence.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="domain-reports">Domain Reports<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#domain-reports" class="hash-link" aria-label="Direct link to Domain Reports" title="Direct link to Domain Reports" translate="no">​</a></h3>
<p>(This is an internal-only feature that we hope to release soon) We are able to detect potential issues (bugs, antipatterns, inefficiencies, failures) with domains upon manual investigation. We have automated this process and now generate reports for each domain. This information can be accessed historically (to see the progression over time) and on-demand (to see the current state). This has already driven domain reliability and efficiency improvements.</p>
<p>This feature and above are at MVP level where we plan to generalize, expand and release for open source soon. In the V1 release, we have mentioned that we would build certain features internally first to be able to have enough velocity, to see where they are going and to make breaking changes until it’s mature.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="client-based-migrations">Client Based Migrations<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#client-based-migrations" class="hash-link" aria-label="Direct link to Client Based Migrations" title="Direct link to Client Based Migrations" translate="no">​</a></h3>
<p>With 30 clusters and ~1000 domains in production, migrating a domain from a cluster to another became a somewhat frequent operation for Cadence. While this feature is mostly automated, we would like to fully automate it to a level that this would be a single click or command operation. Client based migrations (as opposed to server based ones) give us big flexibility that we can have migrations from many to many environments at the same time. Each migration happens in isolation without impacting any other domain or the cluster.</p>
<p>This is an ongoing project where remaining parts are migrating long running workflows faster and seamless technology to technology migrations even if the “from-technology” is not Cadence in the first place. There are many users that migrated from Cadence-like or different technologies to Cadence so we hope to remove the repeating overhead for such users.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="roadmap-next-year">Roadmap (Next Year)<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#roadmap-next-year" class="hash-link" aria-label="Direct link to Roadmap (Next Year)" title="Direct link to Roadmap (Next Year)" translate="no">​</a></h2>
<p>Our priorities for next year look similar with reliability, efficiency, and new features as our focus. We have seen significant improvements especially in our users’ reliability and efficiency on top of the improvements in our servers. This both reduces operational load on our users and makes Cadence one step closer to being a standard way to build services. Here is a short list of what's coming over the next 12 months:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="database-efficiency">Database efficiency<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#database-efficiency" class="hash-link" aria-label="Direct link to Database efficiency" title="Direct link to Database efficiency" translate="no">​</a></h3>
<p>We are increasing our investment in improving Cadence’s database usage. Even though Cadence’s cost looks a lot better compared to the same family of technologies, it can still be significantly improved by eliminating certain bottlenecks coming from its original design.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="helm-charts">Helm Charts<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#helm-charts" class="hash-link" aria-label="Direct link to Helm Charts" title="Direct link to Helm Charts" translate="no">​</a></h3>
<p>We are grateful to the Cadence community for introducing and maintaining our Helm charts for operating Cadence clusters. We are taking its ownership so it can be officially released and tested. We expect to release this in 2024.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="dashboard-templates">Dashboard Templates<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#dashboard-templates" class="hash-link" aria-label="Direct link to Dashboard Templates" title="Direct link to Dashboard Templates" translate="no">​</a></h3>
<p>During our tech talks, demos and user talks, we have received inquiries about what metrics care about. We plan to release templates for our dashboards so our community would look at a similar picture.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="client-v2-modernization">Client V2 Modernization<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#client-v2-modernization" class="hash-link" aria-label="Direct link to Client V2 Modernization" title="Direct link to Client V2 Modernization" translate="no">​</a></h3>
<p>As we announced last year that we plan to make breaking changes to significantly improve our interfaces, we are working on modernizing our client interface.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="higher-parallelization-and-prioritization-in-task-processing">Higher Parallelization and Prioritization in Task Processing<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#higher-parallelization-and-prioritization-in-task-processing" class="hash-link" aria-label="Direct link to Higher Parallelization and Prioritization in Task Processing" title="Direct link to Higher Parallelization and Prioritization in Task Processing" translate="no">​</a></h3>
<p>In an effort to have better domain prioritization in multitenant Cadence clusters, we are improving our task processing with higher parallelization and better prioritization. This is a lot better model than just having domains with defined limits. We expect to provide more resources to high priority domains during their peak hours while allowing low priority domains to consume much bigger resources than allocated during quiet times.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="timer-and-cron-burst-handling">Timer and Cron Burst Handling<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#timer-and-cron-burst-handling" class="hash-link" aria-label="Direct link to Timer and Cron Burst Handling" title="Direct link to Timer and Cron Burst Handling" translate="no">​</a></h3>
<p>After addressing start and signal burst scenarios, we are continuing with bursty timers and cron jobs. Many users set their schedules and timers for the same second with the intention of being able to finish N jobs within a certain amount of time. Current scheduling design isn’t friendly for such intents and high loads can cause temporary starvation in the cluster. By introducing better batch scheduling support, clusters can continue with no disruption while timers are processed in the most efficient way.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="high-zonal-skew-handling">High zonal skew handling<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#high-zonal-skew-handling" class="hash-link" aria-label="Direct link to High zonal skew handling" title="Direct link to High zonal skew handling" translate="no">​</a></h3>
<p>For users operating in their own cloud and having multiple independent zones in every region, zonal skews can be a problem and can create unnecessary bottlenecks when Zonal Isolation feature is enabled. We are working on addressing such issues to improve task matching across zones when skew is detected.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="tasklist-improvements">Tasklist Improvements<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#tasklist-improvements" class="hash-link" aria-label="Direct link to Tasklist Improvements" title="Direct link to Tasklist Improvements" translate="no">​</a></h3>
<p>When a user scenario grows, there are many knobs that need to be manually adjusted. We would like to automatically partition and smartly forward tasks to improve tasklist efficiency significantly to avoid backlogs, timeouts and hot shards.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="shard-movementassignment-improvements">Shard Movement/Assignment Improvements<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#shard-movementassignment-improvements" class="hash-link" aria-label="Direct link to Shard Movement/Assignment Improvements" title="Direct link to Shard Movement/Assignment Improvements" translate="no">​</a></h3>
<p>Cadence shard movements are based on consistent hash and this can be a limiting factor for many different reasons. Certain hosts can end up getting unlucky by having many shards, or having heavy shards. During deployments we might observe a much higher number of shard movements than desired, which reduces the availability. With improved shard movements and assignments we can have more homogenous load among hosts while also having a minimum amount of shard movements during deployments with much better availability.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="worker-heartbeats">Worker Heartbeats<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#worker-heartbeats" class="hash-link" aria-label="Direct link to Worker Heartbeats" title="Direct link to Worker Heartbeats" translate="no">​</a></h3>
<p>Today, there’s no worker liveliness tracking in Cadence. Instead, task or activity heartbeat timeouts are used to reassign tasks to different workers. For latency sensitive users this can become a big disruption. For long activities without heartbeats, this can cause big delays. This feature is to eliminate depending on manual timeout or heartbeat configs to reassign tasks by tracking if workers are still healthy. This feature will also enable so many other new efficiency and reliability features we would like to get to in the future.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="domain-and-workflow-diagnostics">Domain and Workflow Diagnostics<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#domain-and-workflow-diagnostics" class="hash-link" aria-label="Direct link to Domain and Workflow Diagnostics" title="Direct link to Domain and Workflow Diagnostics" translate="no">​</a></h3>
<p>Probably the two most common user questions are “What’s wrong with my domain?” and “What’s wrong with my workflow?”. Today, diagnosing what happened and what could be wrong isn’t that easy apart from some basic cases. We are working on tools that would run diagnostics on workflows and domains to point out things that might potentially be wrong with public runbook links attached. This feature will not only help diagnose what is wrong with our workflows and domains but will also help fix them.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="self-serve-operations">Self Serve Operations<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#self-serve-operations" class="hash-link" aria-label="Direct link to Self Serve Operations" title="Direct link to Self Serve Operations" translate="no">​</a></h3>
<p>Certain Cadence operations are performed through admin CLI operations. However, these should be able to be done via Cadence UI by users. Admins shouldn’t need to be involved in every step or the checks they validate should be able to be automated. This is what the initiative is about including domain registration, auth/authz onboarding or adding new search attributes but it’s not limited to these operations.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="cost-estimation">Cost Estimation<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#cost-estimation" class="hash-link" aria-label="Direct link to Cost Estimation" title="Direct link to Cost Estimation" translate="no">​</a></h3>
<p>One big question we receive when users are onboarding to Cadence is “How much will this cost me?”. This is not an easy question to answer since data and traffic load can be quite different. We plan to automate this process to help users understand how much resources they will need. Especially in multi-tenant clusters, this will help users understand how much room they still have in their clusters and how much the new scenario will consume.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="domain-reports-continue">Domain Reports (continue)<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#domain-reports-continue" class="hash-link" aria-label="Direct link to Domain Reports (continue)" title="Direct link to Domain Reports (continue)" translate="no">​</a></h3>
<p>We plan to release this internal feature to open source as soon as possible. On top of presenting this data on built-in Cadence surfaces (web, CLI. etc.) we will create APIs to make it integratable with deployment systems, user service UIs, periodic reports and any other service that would like to consume.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="non-determinism-detection-improvements-continue">Non-determinism Detection Improvements (continue)<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#non-determinism-detection-improvements-continue" class="hash-link" aria-label="Direct link to Non-determinism Detection Improvements (continue)" title="Direct link to Non-determinism Detection Improvements (continue)" translate="no">​</a></h3>
<p>We have seen great reliability improvements and reduction in incidents with this feature on the user side last year. We continue to invest in this feature and make it available in open source as soon as possible.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="domain-migrations-continue">Domain Migrations (continue)<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#domain-migrations-continue" class="hash-link" aria-label="Direct link to Domain Migrations (continue)" title="Direct link to Domain Migrations (continue)" translate="no">​</a></h3>
<p>In the next year, we plan to finish our seamless client based migration to be able to safely migrate domains from one cluster to another, one technology (even if it’s not Cadence) to another and one cloud solution to another. There are only a few features left to achieve this.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="community-1">Community<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/07/11/2024-07-11-yearly-roadmap-update/yearly-roadmap-update#community-1" class="hash-link" aria-label="Direct link to Community" title="Direct link to Community" translate="no">​</a></h2>
<p>Do you want to hear more about Cadence? Do you need help with your set-up or usage? Are you evaluating your options? Do you want to contribute? Feel free to join our community and reach out to us.</p>
<p>Slack: <a href="https://uber-cadence.slack.com/" target="_blank" rel="noopener noreferrer">https://uber-cadence.slack.com/</a></p>
<p>Github: <a href="https://github.com/cadence-workflow/cadence" target="_blank" rel="noopener noreferrer">https://github.com/cadence-workflow/cadence</a></p>
<p>Since last year, we have been contacted by various companies to take on bigger projects on the Cadence project. As we have been investing in code coverage and refactoring Cadence for a cleaner codebase, this will be a lot easier now. Let us know if you have project ideas to contribute or if you’d like to pick something we already planned.</p>
<p>Our monthly community meetings are still ongoing, too. That is the best place to get heard and be involved in our decision-making process. Let us know so we can send you an invite. We are also working on a broader governing model to open up this project to more people. Stay tuned for updates on this topic!</p>]]></content:encoded>
            <category>Roadmap</category>
            <category>Deep Dives</category>
        </item>
        <item>
            <title><![CDATA[Cadence non-derministic errors common question Q&A (part 1)]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2024/02/15/cadence-non-deterministic-common-qa</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2024/02/15/cadence-non-deterministic-common-qa</guid>
            <pubDate>Sun, 10 Mar 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[If I change code logic inside an Cadence activity (for example, my activity is calling database A but now I want it to call database B),  will it trigger an non-deterministic error?]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="if-i-change-code-logic-inside-an-cadence-activity-for-example-my-activity-is-calling-database-a-but-now-i-want-it-to-call-database-b--will-it-trigger-an-non-deterministic-error">If I change code logic inside an Cadence activity (for example, my activity is calling database A but now I want it to call database B),  will it trigger an non-deterministic error?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/02/15/cadence-non-deterministic-common-qa#if-i-change-code-logic-inside-an-cadence-activity-for-example-my-activity-is-calling-database-a-but-now-i-want-it-to-call-database-b--will-it-trigger-an-non-deterministic-error" class="hash-link" aria-label="Direct link to If I change code logic inside an Cadence activity (for example, my activity is calling database A but now I want it to call database B),  will it trigger an non-deterministic error?" title="Direct link to If I change code logic inside an Cadence activity (for example, my activity is calling database A but now I want it to call database B),  will it trigger an non-deterministic error?" translate="no">​</a></h3>
<p><b>NO</b>. This change will not trigger non-deterministic error.</p>
<p>An Activity is the smallest unit of execution for Cadence and what happens inside activities are not recorded as historical events and therefore will not be replayed. In short, this change is deterministic and it is fine to modify logic inside activities.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="does-changing-the-workflow-definition-trigger-non-determinstic-errors">Does changing the workflow definition trigger non-determinstic errors?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/02/15/cadence-non-deterministic-common-qa#does-changing-the-workflow-definition-trigger-non-determinstic-errors" class="hash-link" aria-label="Direct link to Does changing the workflow definition trigger non-determinstic errors?" title="Direct link to Does changing the workflow definition trigger non-determinstic errors?" translate="no">​</a></h3>
<p><b>YES</b>. This is a very typical non-deterministic error.</p>
<p>When a new workflow code change is deployed, Cadence will find if it is compatible with
Cadence history. Changes to workflow definition will fail the replay process of Cadence
as it finds the new workflow definition imcompatible with previous historical events.</p>
<p>Here is a list of common workflow definition changes.</p>
<ul>
<li>Changing workflow parameter counts</li>
<li>Changing workflow parameter types</li>
<li>Changing workflow return types</li>
</ul>
<p>The following changes are not categorized as definition changes and therefore will not
trigger non-deterministic errors.</p>
<ul>
<li>Changes of workflow return values</li>
<li>Changing workflow parameter names as they are just positional</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="does-changing-activity-definitions-trigger-non-determinstic-errors">Does changing activity definitions trigger non-determinstic errors?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/02/15/cadence-non-deterministic-common-qa#does-changing-activity-definitions-trigger-non-determinstic-errors" class="hash-link" aria-label="Direct link to Does changing activity definitions trigger non-determinstic errors?" title="Direct link to Does changing activity definitions trigger non-determinstic errors?" translate="no">​</a></h3>
<p><b>YES</b>. Similar to workflow definition change, this is also a very typical non-deterministic error.</p>
<p>Activities are also recorded and replayed by Cadence. Therefore, changes to activity must also be compatible with Cadence history. The following changes are common ones that trigger non-deterministic errors.</p>
<ul>
<li>Changing activity parameter counts</li>
<li>Changing activity parameter types</li>
<li>Changing activity return types</li>
</ul>
<p>As activity paremeters are also positional, these two changes will NOT trigger non-deterministic errors.</p>
<ul>
<li>Changes of activity return values</li>
<li>Changing activity parameter names</li>
</ul>
<p>Activity return values inside workflows are not recorded and replayed.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-changes-inside-workflows-may-potentially-trigger-non-deterministic-errors">What changes inside workflows may potentially trigger non-deterministic errors?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/02/15/cadence-non-deterministic-common-qa#what-changes-inside-workflows-may-potentially-trigger-non-deterministic-errors" class="hash-link" aria-label="Direct link to What changes inside workflows may potentially trigger non-deterministic errors?" title="Direct link to What changes inside workflows may potentially trigger non-deterministic errors?" translate="no">​</a></h3>
<p>Cadence records each execution of a workflow and activity execution inside each of them.Therefore, new changes must be compatible with execution orders inside the workflow. The following changes will fail the non-deterministic check.</p>
<ul>
<li>Append another activity</li>
<li>Delete an existing activity</li>
<li>Reordering activities</li>
</ul>
<p>If you really need to change the activity implementation based on new business requirements, you may consider using versioning your workflow.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="are-cadence-signals-replayed-if-definition-of-signal-is-changed-will-it-trigger-non-deterministic-errors">Are Cadence signals replayed? If definition of signal is changed, will it trigger non-deterministic errors?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/02/15/cadence-non-deterministic-common-qa#are-cadence-signals-replayed-if-definition-of-signal-is-changed-will-it-trigger-non-deterministic-errors" class="hash-link" aria-label="Direct link to Are Cadence signals replayed? If definition of signal is changed, will it trigger non-deterministic errors?" title="Direct link to Are Cadence signals replayed? If definition of signal is changed, will it trigger non-deterministic errors?" translate="no">​</a></h3>
<p>Yes. If a signal is used in a workflow, it becomes a critical component of your workflow. Because signals also involve I/O to your workflow, it is also recorded and replayed. Modifications on signal definitions or usage may yield to non-deterministic errors, for instance, changing return type of a signal.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="if-i-have-new-business-requirement-and-really-need-to-change-the-definition-of-a-workflow-what-should-i-do">If I have new business requirement and really need to change the definition of a workflow, what should I do?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/02/15/cadence-non-deterministic-common-qa#if-i-have-new-business-requirement-and-really-need-to-change-the-definition-of-a-workflow-what-should-i-do" class="hash-link" aria-label="Direct link to If I have new business requirement and really need to change the definition of a workflow, what should I do?" title="Direct link to If I have new business requirement and really need to change the definition of a workflow, what should I do?" translate="no">​</a></h3>
<p>You may introduce a new workflow registered to your worker and divert traffic to it or use versioning for your workflow. Check out <a href="https://cadenceworkflow.io/docs/go-client/workflow-versioning/" target="_blank" rel="noopener noreferrer">Cadence website</a> for more information about versioning.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="does-changes-to-local-activities-definition-trigger-non-deterministic-errors">Does changes to local activities' definition trigger non-deterministic errors?<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2024/02/15/cadence-non-deterministic-common-qa#does-changes-to-local-activities-definition-trigger-non-deterministic-errors" class="hash-link" aria-label="Direct link to Does changes to local activities' definition trigger non-deterministic errors?" title="Direct link to Does changes to local activities' definition trigger non-deterministic errors?" translate="no">​</a></h3>
<p>Yes. Local activities are recorded and therefore replayed by Cadence. Imcompatible changes on local activity definitions will yield to non-deterministic errors.</p>]]></content:encoded>
            <category>Deep Dives</category>
        </item>
        <item>
            <title><![CDATA[Cadence Community Spotlight Update - November 2023]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2023/11/30/community-spotlight-update-november-2023</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2023/11/30/community-spotlight-update-november-2023</guid>
            <pubDate>Thu, 30 Nov 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Welcome to the latest of our regular monthly Community Spotlight updates that gives you news from in and around the Cadence community!]]></description>
            <content:encoded><![CDATA[<p>Welcome to the latest of our regular monthly Community Spotlight updates that gives you news from in and around the Cadence community!</p>
<p>It's been a couple of months since our last update so we have a lot of updates to share with you.</p>
<p>Please see below for a roundup of the highlights:</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="proposal-for-cadence-native-authentication">Proposal for Cadence Native Authentication<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/11/30/community-spotlight-update-november-2023#proposal-for-cadence-native-authentication" class="hash-link" aria-label="Direct link to Proposal for Cadence Native Authentication" title="Direct link to Proposal for Cadence Native Authentication" translate="no">​</a></h2>
<p>Community member <a href="https://lt.linkedin.com/in/mantassidlauskas" target="_blank" rel="noopener noreferrer">Mantas Sidlauskas</a> has drafted a proposal around Cadence native authentication and is asking for community feedback. If you are interested in reviewing the current proposal and providing comments or feedback then please find the proposal details at the link below:</p>
<ul>
<li><a href="https://docs.google.com/document/d/13GxRBZfQkLyhDCrpFaZmRcw7DJJG-zdy0_mPXy3CcWw/edit#heading=h.c8u99ansg7ma" target="_blank" rel="noopener noreferrer">Cadence Native Authentication Proposal</a></li>
</ul>
<p>This is a great example of how we can focus on collaborating together to find a collective solution. A big thank you to Mantas for initiating this work and we hope to see the results of the community input soon!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="iwf-deep-dive-and-more">iWF Deep Dive and More!<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/11/30/community-spotlight-update-november-2023#iwf-deep-dive-and-more" class="hash-link" aria-label="Direct link to iWF Deep Dive and More!" title="Direct link to iWF Deep Dive and More!" translate="no">​</a></h2>
<p>During the last few months community member <a href="https://www.linkedin.com/in/prclqz/" target="_blank" rel="noopener noreferrer">Quanzheng Long</a> has continued to share his thoughts about <a href="https://github.com/indeedeng/iwf" target="_blank" rel="noopener noreferrer">iWF</a>, a layer implemented on top of Cadence. Since our last update iWF now has a<a href="https://github.com/indeedeng/iwf-python-sdk" target="_blank" rel="noopener noreferrer">Python SDK</a>. Long has been busy writing articles to share iWF tips and tricks as well as some general ideas about workflows and processes.  Links to Long's articles can be found below:</p>
<ul>
<li>
<p><a href="https://medium.com/@qlong/iwf-deep-dive-workflowstate-durable-timer-1-0bb89e6d6fd4" target="_blank" rel="noopener noreferrer">iWF Deep Dive: workflowState+Durable Timer#1</a></p>
</li>
<li>
<p><a href="https://medium.com/@qlong/gotchas-about-signalwithstart-in-cadence-temporal-c3783fe1cc2e" target="_blank" rel="noopener noreferrer">Gotchas About SignalWithStart in Cadence/Temporal</a></p>
</li>
<li>
<p><a href="https://medium.com/@qlong/workflow-could-be-process-in-workflowascode-frameworks-63dcb632c248" target="_blank" rel="noopener noreferrer">"Workflow" could be "Process" in WorkflowAsCode frameworks</a></p>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="new-go-samples-for-cadence">New Go Samples for Cadence<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/11/30/community-spotlight-update-november-2023#new-go-samples-for-cadence" class="hash-link" aria-label="Direct link to New Go Samples for Cadence" title="Direct link to New Go Samples for Cadence" translate="no">​</a></h2>
<p>The Cadence core team is deprecating the old samples for Go and replacing them with new version 2 (V2) samples. They have received a lot of feedback from the community that people are having trouble with old samples, so are in the process of publishing a completely new set of samples for Go.</p>
<p>Here are some major changes to the new samples:</p>
<ul>
<li>Easy to use the read - the new samples will be completely based on CLIs instead of running a binary. (This is consistent with current Cadence use experience)</li>
<li>Simple and transparent worker configuration - the old samples did not provide user a clear demonstration about the relationship between the worker and workflow themselves</li>
<li>The new samples will help you bootstrap your Cadence workflow faster and easier.</li>
<li>More vivid and self-explanatory - instead of the traditional "HelloWorld"  type of samples, we want to make it more interesting and engaging. (Each sample will try to simulate a real-life use case to make them more understandable and fun to learn!)</li>
</ul>
<p>We hope the community will enjoy these changes. If you have any questions or have new an idea for a new sample then please reach out to <a href="https://www.linkedin.com/in/chrisqin0610" target="_blank" rel="noopener noreferrer">Chris Qin</a>.</p>
<p>The new Go samples can be found at:</p>
<ul>
<li><a href="https://github.com/cadence-workflow/cadence-samples/tree/master/new_samples" target="_blank" rel="noopener noreferrer">https://github.com/cadence-workflow/cadence-samples/tree/master/new_samples</a>.</li>
</ul>
<p>Note that the old samples will be removed once the new samples are fully refreshed.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cadence-retrospective">Cadence Retrospective<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/11/30/community-spotlight-update-november-2023#cadence-retrospective" class="hash-link" aria-label="Direct link to Cadence Retrospective" title="Direct link to Cadence Retrospective" translate="no">​</a></h2>
<p>We are nearly at the end of another year and yes it has gone so fast! Over this year Cadence and the community have evolved and grown. This is a good time to reflect about all the things that have happened in the project over the year and think about a possible roadmap for the future.</p>
<p>If you have any feedback, or comments about the project or ideas about what features you'd like to see in the roadmap then please feel free to begin a discussion in the #community <a href="http://t.uber.com/cadence-slack" target="_blank" rel="noopener noreferrer">Slack</a>  channel.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cadence-in-the-news">Cadence in the News!<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/11/30/community-spotlight-update-november-2023#cadence-in-the-news" class="hash-link" aria-label="Direct link to Cadence in the News!" title="Direct link to Cadence in the News!" translate="no">​</a></h2>
<p>Below are a selection of Cadence related articles, blogs and whitepapers.
Please take a look and feel free to share via your own social media channels.</p>
<ul>
<li>
<p><a href="https://www.instaclustr.com/blog/how-to-throttle-cadence/" target="_blank" rel="noopener noreferrer">How to Throttle Cadence</a></p>
</li>
<li>
<p><a href="https://medium.com/@qlong/iwf-deep-dive-workflowstate-durable-timer-1-0bb89e6d6fd4" target="_blank" rel="noopener noreferrer">iWF Deep Dive: workflowState+Durable Timer#1</a></p>
</li>
<li>
<p><a href="https://medium.com/@qlong/gotchas-about-signalwithstart-in-cadence-temporal-c3783fe1cc2e" target="_blank" rel="noopener noreferrer">Gotchas About SignalWithStart in Cadence/Temporal</a></p>
</li>
<li>
<p><a href="https://medium.com/@qlong/workflow-could-be-process-in-workflowascode-frameworks-63dcb632c248" target="_blank" rel="noopener noreferrer">"Workflow" could be "Process" in WorkflowAsCode frameworks</a></p>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="upcoming-events">Upcoming Events<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/11/30/community-spotlight-update-november-2023#upcoming-events" class="hash-link" aria-label="Direct link to Upcoming Events" title="Direct link to Upcoming Events" translate="no">​</a></h2>
<ul>
<li><a href="https://netapp.zoom.us/webinar/register/WN_jT5fxSldRhuzV0NSllBd7g#/registration" target="_blank" rel="noopener noreferrer">On Demand Webinar: Building With Cadence<!-- -->:Quantifiable<!-- --> Efficiency</a></li>
</ul>
<p>If you have any news or topics you'd like us to include in our next update then please join our <a href="http://t.uber.com/cadence-slack" target="_blank" rel="noopener noreferrer">Slack</a> #community channel.</p>
<p>Please remember that this update is for you - so if you have any comments or feedback that could help us improve it then please share it with us in the #community <a href="http://t.uber.com/cadence-slack" target="_blank" rel="noopener noreferrer">Slack</a> channel.</p>]]></content:encoded>
            <category>Community Spotlight</category>
            <category>Announcement</category>
        </item>
        <item>
            <title><![CDATA[Cadence Community Spotlight Update - August 2023]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2023/08/31/community-spotlight-august-2023</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2023/08/31/community-spotlight-august-2023</guid>
            <pubDate>Thu, 31 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Welcome to the latest of our regular monthly Community Spotlight updates that gives you news from in and around the Cadence community!]]></description>
            <content:encoded><![CDATA[<p>Welcome to the latest of our regular monthly Community Spotlight updates that gives you news from in and around the Cadence community!</p>
<p>Please see below for a roundup of the highlights:</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="more-cadence-how-tos">More Cadence How To's<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/08/31/community-spotlight-august-2023#more-cadence-how-tos" class="hash-link" aria-label="Direct link to More Cadence How To's" title="Direct link to More Cadence How To's" translate="no">​</a></h2>
<p>You might have noticed that we have had a few more contributions to our blog from <a href="https://www.linkedin.com/in/chrisqin0610" target="_blank" rel="noopener noreferrer">Chris Qin</a>. Chris has been busy sharing insights, and tips on a few important Cadence topics. The objective is to help the community with any potential problems.</p>
<p>Here are the latest topics:</p>
<ul>
<li>
<p><a href="https://cadenceworkflow.io/blog/2023/07/10/cadence-bad-practices-part-1/" target="_blank" rel="noopener noreferrer">Bad Practices and Anti-Patterns with Cadence - Part 1</a></p>
</li>
<li>
<p><a href="https://cadenceworkflow.io/blog/2023/08/27/nondeterministic-errors-replayers-shadowers/" target="_blank" rel="noopener noreferrer">Non-Determistic Errors, Replayers and Shadowers</a></p>
</li>
</ul>
<p>Even if you have not encountered these use cases - it is good to be prepared and have a solution ready.Please take a look and let us have your feedback.</p>
<p>Chris is also going to take a look at the <a href="https://cadenceworkflow.io/docs/java-client/client-overview/#samples" target="_blank" rel="noopener noreferrer">Cadence Samples</a> to make sure they are all working and if not - he's going to re-write them so that they do!</p>
<p>Thanks very much Chris for all the work you are doing to help improve the project!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="more-iwf-examaples">More iWF Examaples<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/08/31/community-spotlight-august-2023#more-iwf-examaples" class="hash-link" aria-label="Direct link to More iWF Examaples" title="Direct link to More iWF Examaples" translate="no">​</a></h2>
<p>Community member <a href="https://www.linkedin.com/in/prclqz/" target="_blank" rel="noopener noreferrer">Quanzheng Long</a> has also been busy writing this month. In previous blogs Long has told us about <a href="https://github.com/indeedeng/iwf" target="_blank" rel="noopener noreferrer">iWF</a> that is a layer implemented over of Cadence.</p>
<p>During August Long has published a couple of articles on using the 'ContinueAsNew' functionality in iWF. Links to Part 1 and Part are below:</p>
<ul>
<li>
<p><a href="https://medium.com/@qlong/guide-to-continueasnew-in-cadence-temporal-workflow-using-iwf-as-an-example-part-2-cedabd732bec" target="_blank" rel="noopener noreferrer">Guide to ContinueAsNew in Cadence/Temporal Workflow Using iWF as an example - Part 1</a></p>
</li>
<li>
<p><a href="https://medium.com/@qlong/guide-to-continueasnew-in-cadence-temporal-workflow-using-iwf-as-an-example-part-1-c24ae5266f07" target="_blank" rel="noopener noreferrer">Guide to ContinueAsNew in Cadence/Temporal Workflow Using iWF as an example - Part 2</a></p>
</li>
</ul>
<p>Please take a look and if you've enjoyed reading them then let Long and us know!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cadence-at-the-helm">Cadence At the Helm!<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/08/31/community-spotlight-august-2023#cadence-at-the-helm" class="hash-link" aria-label="Direct link to Cadence At the Helm!" title="Direct link to Cadence At the Helm!" translate="no">​</a></h2>
<p>Last month we mentioned the Cadence Helm charts and all the previous work that had been done by <a href="https://www.linkedin.com/in/sagikazarmark/" target="_blank" rel="noopener noreferrer">Mark Sagi-Kazar</a>. We were looking to ensure they are maintained.</p>
<p>So a special thanks goes out this month to <a href="ttps://github.com/edmondop" target="_blank" rel="noopener noreferrer">Edmondo</a> for contributing some work on the <a href="https://github.com/edmondop/cadence-helm-chart/" target="_blank" rel="noopener noreferrer">Cadence Helm Chart</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="community-support">Community Support!<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/08/31/community-spotlight-august-2023#community-support" class="hash-link" aria-label="Direct link to Community Support!" title="Direct link to Community Support!" translate="no">​</a></h2>
<p>Our <a href="http://t.uber.com/cadence-slack" target="_blank" rel="noopener noreferrer">Slack</a> channel continues to be the main place where people are asking for help and support with Cadence. During August (which is supposed to be holiday season), we still had 9 questions raised around various topics.</p>
<p>Huge thanks to the following community members who took time to respond and help others: David, Edmondo, Chris Qin, Rony Rahman and Ben Slater.</p>
<p>It's good to see that we are continuing to support each other - doing exactly what communities do!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cadence-in-the-news">Cadence in the News!<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/08/31/community-spotlight-august-2023#cadence-in-the-news" class="hash-link" aria-label="Direct link to Cadence in the News!" title="Direct link to Cadence in the News!" translate="no">​</a></h2>
<p>Below are a selection of Cadence related articles, blogs and whitepapers.
Please take a look and feel free to share via your own social media channels.</p>
<ul>
<li>
<p><a href="https://medium.com/@qlong/guide-to-continueasnew-in-cadence-temporal-workflow-using-iwf-as-an-example-part-2-cedabd732bec" target="_blank" rel="noopener noreferrer">Guide to ContinueAsNew in Cadence/Temporal Workflow Using iWF as an example - Part 1</a></p>
</li>
<li>
<p><a href="https://medium.com/@qlong/guide-to-continueasnew-in-cadence-temporal-workflow-using-iwf-as-an-example-part-1-c24ae5266f07" target="_blank" rel="noopener noreferrer">Guide to ContinueAsNew in Cadence/Temporal Workflow Using iWF as an example - Part 2</a></p>
</li>
<li>
<p><a href="https://www.instaclustr.com/blog/aws-privatelink-for-cadence-on-instaclustr-by-netapp/" target="_blank" rel="noopener noreferrer">AWS PrivateLink Connectivity is now Available with Instaclustr for Cadence</a></p>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="upcoming-events">Upcoming Events<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/08/31/community-spotlight-august-2023#upcoming-events" class="hash-link" aria-label="Direct link to Upcoming Events" title="Direct link to Upcoming Events" translate="no">​</a></h2>
<ul>
<li>
<p><a href="https://netapp.zoom.us/webinar/register/WN_Uh9Y6ruiQSS5EiylNlsMug#/registration" target="_blank" rel="noopener noreferrer">Webinar: Introducing the Cadence Workflow HTTP API - 21st September 2023 </a></p>
</li>
<li>
<p><a href="https://netapp.zoom.us/webinar/register/WN_Hv9lO9QtSqyPPWkSAIRj5g#/registration" target="_blank" rel="noopener noreferrer">On Demand Webinar: Microservices - A Modern Orchestration Approach with Cadence</a></p>
</li>
<li>
<p><a href="https://www.instaclustr.com/events/spinning-your-drones-with-cadence-and-apache-kafka/" target="_blank" rel="noopener noreferrer">On Demand Webinar: Spinning Your Drones with Cadence and Apache Kafka</a></p>
</li>
</ul>
<p>If you have any news or topics you'd like us to include in our next update then please join our <a href="http://t.uber.com/cadence-slack" target="_blank" rel="noopener noreferrer">Slack</a> #community channel.</p>
<p>Please remember that this update is for you - so if you have any comments or feedback that could help us improve it then please share it with us in the #community <a href="http://t.uber.com/cadence-slack" target="_blank" rel="noopener noreferrer">Slack</a> channel.</p>]]></content:encoded>
            <category>Introduction to Cadence</category>
            <category>Community Spotlight</category>
        </item>
        <item>
            <title><![CDATA[Non-deterministic errors, replayers and shadowers]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2023/08/28/nondeterministic-errors-replayers-shadowers</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2023/08/28/nondeterministic-errors-replayers-shadowers</guid>
            <pubDate>Sun, 27 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[It is conceivable that developers constantly update their Cadence workflow code based upon new business use cases and needs. However,]]></description>
            <content:encoded><![CDATA[<p>It is conceivable that developers constantly update their Cadence workflow code based upon new business use cases and needs. However,
the definition of a Cadence workflow must be deterministic because behind the scenes cadence uses event sourcing to construct
the workflow state by replaying the historical events stored for this specific workflow. Introducing components that are not compatible
with an existing running workflow will yield to non-deterministic errors and sometimes developers find it tricky to debug. Consider the
following workflow that executes two activities.</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SampleWorkflow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ao </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ActivityOptions</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ScheduleToStartTimeout</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Minute</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StartToCloseTimeout</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">    time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Minute</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ctx </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WithActivityOptions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ao</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> result1 </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ActivityA</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">result1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> result2 </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    err </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ActivityB</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> result1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">result2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> result2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre></div></div>
<p>In this example, the workflow will execute ActivityA and Activity B in sequence. These activities may have other logics in background, such as polling long running operations or manipulate database reads or writes. Now if the developer replaces ActivityA with another activity ActivityC, a non-deterministic error could happen for an existing workflow. It is because the workflow expects results from ActivityA but since the definition of the workflow has been changed to use results from ActivityC, the workflow will fail due to failure of identifying history data of ActivityA. Such issues can be detected by introducing replayers and shadowers to the workflow unit tests.</p>
<p>Cadence workflow replayer is a testing component for replaying existing workflow histories against a workflow definition. You may think of replayer as a mock which will rerun your workflow with exactly the same history as your real workflow. The replaying logic is the same as the one used for processing workflow tasks. If it detects any incompatible changes, the replay test will fail.
Workflow Replayer works well when verifying the compatibility against a small number of workflow histories. If there are lots of workflows in production that need to be verified, dumping all histories manually clearly won't work. Directly fetching histories from the cadence server might be a solution, but the time to replay all workflow histories might be too long for a test.</p>
<p>Workflow Shadower is built on top of Workflow Replayer to address this problem. The basic idea of shadowing is: scan workflows based on the filters you defined, fetch history for each workflow in the scan result from Cadence server and run the replay test. It can be run either as a test to serve local development purposes or as a workflow in your worker to continuously replay production workflows.</p>
<p>You may find detailed instructions on how to use replayers and shadowers on <a href="https://cadenceworkflow.io/docs/go-client/workflow-replay-shadowing/" target="_blank" rel="noopener noreferrer">our website</a>. We will introduce versioning in the next coming blogs.</p>]]></content:encoded>
            <category>Deep Dives</category>
            <category>Testing</category>
        </item>
        <item>
            <title><![CDATA[Cadence Community Spotlight Update - July 2023]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2023/07/31/community-spotlight-july-2023</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2023/07/31/community-spotlight-july-2023</guid>
            <pubDate>Mon, 31 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Welcome to the latest of our regular monthly Community Spotlight updates that gives you news from in and around the Cadence community!]]></description>
            <content:encoded><![CDATA[<p>Welcome to the latest of our regular monthly Community Spotlight updates that gives you news from in and around the Cadence community!</p>
<p>Please see below for a roundup of the highlights:</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="getting-started-with-cadence">Getting Started with Cadence<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/07/31/community-spotlight-july-2023#getting-started-with-cadence" class="hash-link" aria-label="Direct link to Getting Started with Cadence" title="Direct link to Getting Started with Cadence" translate="no">​</a></h2>
<p>Are you new to  Cadence and want to understand the basic concepts and architecture? Well we have some great information for you!</p>
<p>Community member <a href="https://www.linkedin.com/in/chrisqin0610/" target="_blank" rel="noopener noreferrer">Chris Qin</a> has written a <a href="https://cadenceworkflow.io/blog/2023/07/01/components-of-cadence-application-setup/" target="_blank" rel="noopener noreferrer">short blog post</a> that takes you through the the three main components that make up a Cadence application. Please take a look and feel free to give us your comments and feedback.</p>
<p>Thanks Chris for sharing your knowledge and helping others to get started.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cadence-go-client-v10-released">Cadence Go Client v1.0 Released<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/07/31/community-spotlight-july-2023#cadence-go-client-v10-released" class="hash-link" aria-label="Direct link to Cadence Go Client v1.0 Released" title="Direct link to Cadence Go Client v1.0 Released" translate="no">​</a></h2>
<p>This month saw the release of <a href="https://github.com/cadence-workflow/cadence-go-client/releases/tag/v1.0.0" target="_blank" rel="noopener noreferrer">v1.0 of the Cadence Go Client</a>. Note that the work done on this release was as a result of community feedback asking for it - so we are listening and responding to community needs.</p>
<p>Thanks very much to everyone who worked hard to get this release out!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cadence-release-strategy">Cadence Release Strategy<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/07/31/community-spotlight-july-2023#cadence-release-strategy" class="hash-link" aria-label="Direct link to Cadence Release Strategy" title="Direct link to Cadence Release Strategy" translate="no">​</a></h2>
<p>A recent discussion on the Cadence Release strategy was posted in <a href="https://github.com/cadence-workflow/cadence/discussions/5362" target="_blank" rel="noopener noreferrer">Cadence Github Discussions</a> (and also our #general channel on our <a href="http://t.uber.com/cadence-slack" target="_blank" rel="noopener noreferrer">Slack</a> about the approach we'd like to take for future releases. As a community we want to ensure code stability and to not burden people with having to upgrade frequently.</p>
<p>Based on feedback from the community we will be introducing quarterly release cycles but also give people the ability to make use of patches and minor releases. We will be communicating the intention to make a release at least a month beforehand so that the community has time to finalise any features they want to be included in the upcoming release.</p>
<p>For those of you wanting to keep up to date or try out new features in between releases, the core team at Uber will continue to make patch and minor version updates available to the community.</p>
<p>As always we welcome your feedback so please feel free to add your thoughts and comments to the discussion.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cadence-helm-charts">Cadence Helm Charts<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/07/31/community-spotlight-july-2023#cadence-helm-charts" class="hash-link" aria-label="Direct link to Cadence Helm Charts" title="Direct link to Cadence Helm Charts" translate="no">​</a></h2>
<p>Community member <a href="https://www.linkedin.com/in/sagikazarmark/" target="_blank" rel="noopener noreferrer">Mark Sagi-Kazar</a> has been maintaining the Banzai Cloud Cadence Helm Charts for the community. As the Helm Charts are a key tool for the community we are planning to take over the maintenance of them.</p>
<p>Our plan is to move the charts into the Cadence repository and to maintain an official and supported Kubernetes solution with Cadence.</p>
<p>Huge thanks to Mark for all the work you have done and it's great to see the task being handed over and made into a community effort.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="upcoming-events">Upcoming Events<a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/07/31/community-spotlight-july-2023#upcoming-events" class="hash-link" aria-label="Direct link to Upcoming Events" title="Direct link to Upcoming Events" translate="no">​</a></h2>
<ul>
<li>None</li>
</ul>
<p>If you have any news or topics you'd like us to include in our next update then please join our <a href="http://t.uber.com/cadence-slack" target="_blank" rel="noopener noreferrer">Slack</a> #community channel.</p>
<p>Please remember that this update is for you - so if you have any comments or feedback that could help us improve it then please share it with us in the #community <a href="http://t.uber.com/cadence-slack" target="_blank" rel="noopener noreferrer">Slack</a> channel.</p>]]></content:encoded>
            <category>Releases</category>
            <category>Announcement</category>
            <category>Community Spotlight</category>
        </item>
        <item>
            <title><![CDATA[Write your first workflow with Cadence]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2023/07/16/2023-07-16-write-your-first-workflow-with-cadence/write-your-first-workflow-with-cadence</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2023/07/16/2023-07-16-write-your-first-workflow-with-cadence/write-your-first-workflow-with-cadence</guid>
            <pubDate>Sun, 16 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[We have covered basic components of Cadence and how to implement a Cadence worker on local environment in previous blogs. In this blog, let's write your very first HelloWorld workflow with Cadence. I've started the Cadence backend server in background and registered a domain named test-domain. You may use the code snippet for the worker service in this blog  Let's first write a activity, which takes a single string argument and print a log in the console.]]></description>
            <content:encoded><![CDATA[<p>We have covered <a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/06/28/components-of-cadence-application-setup">basic components of Cadence</a> and <a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/07/05/implement-cadence-worker-from-scratch">how to implement a Cadence worker on local environment</a> in previous blogs. In this blog, let's write your very first HelloWorld workflow with Cadence. I've started the Cadence backend server in background and registered a domain named <code>test-domain</code>. You may use the code snippet for the worker service in <a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/07/05/implement-cadence-worker-from-scratch">this blog</a>  Let's first write a activity, which takes a single string argument and print a log in the console.</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">helloWorldActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> name </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	logger </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> activity</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetLogger</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"helloworld activity started"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Hello "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> name </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"!"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Then let's write a workflow that invokes this activity</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">helloWorldWorkflow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> name </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	ao </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ActivityOptions</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		ScheduleToStartTimeout</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Minute</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		StartToCloseTimeout</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">    time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Minute</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		HeartbeatTimeout</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">       time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Second </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	ctx </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WithActivityOptions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ao</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	logger </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetLogger</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"helloworld workflow started"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> helloworldResult </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ExecuteActivity</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> helloWorldActivity</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">helloworldResult</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Activity failed."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> zap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Workflow completed."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> zap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Result"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> helloworldResult</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Don't forget to register your workflow and activity to your worker in the <code>init</code> function.</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">init</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    workflow</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Register</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">helloWorldWorkflow</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    activity</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Register</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">helloWorldActivity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Now restart your worker and you will only see logs like</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token number" style="color:#36acaa">2023</span><span class="token plain">-07-16T12:07:33.165-0700    INFO    internal/internal_worker.go:834 Started Workflow Worker     </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"Domain"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-domain"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"TaskList"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-worker"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"WorkerID"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"13585@uber-C02F18EQMD6R@test-worker@42f8a76f-cc42-4a0d-a001-7f7959d5d623"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">2023</span><span class="token plain">-07-16T12:07:33.175-0700    INFO    internal/internal_worker.go:859 Started Activity Worker     </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"Domain"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-domain"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"TaskList"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-worker"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"WorkerID"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"13585@uber-C02F18EQMD6R@test-worker@42f8a76f-cc42-4a0d-a001-7f7959d5d623"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">2023</span><span class="token plain">-07-16T12:07:33.175-0700    INFO    cadence-worker/code.go:84       Started Worker.     </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"worker"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-worker"</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Let's try to run a Cadence workflow using Cadence CLI.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cadence </span><span class="token parameter variable" style="color:#36acaa">--env</span><span class="token plain"> development </span><span class="token parameter variable" style="color:#36acaa">--domain</span><span class="token plain"> test-domain workflow start </span><span class="token parameter variable" style="color:#36acaa">--et</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">60</span><span class="token plain"> </span><span class="token parameter variable" style="color:#36acaa">--tl</span><span class="token plain"> test-worker </span><span class="token parameter variable" style="color:#36acaa">--workflow_type</span><span class="token plain"> main.helloWorldWorkflow </span><span class="token parameter variable" style="color:#36acaa">--input</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'"World"'</span><br></span></code></pre></div></div>
<p>You should see the Hello World log such like</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token number" style="color:#36acaa">2023</span><span class="token plain">-07-16T12:09:11.858-0700    INFO    cadence-worker/code.go:104      Workflow completed. </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"Domain"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-domain"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"TaskList"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-worker"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"WorkerID"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"13585@uber-C02F18EQMD6R@test-worker@42f8a76f-cc42-4a0d-a001-7f7959d5d623"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"WorkflowType"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"main.helloWorldWorkflow"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"WorkflowID"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"8cb7fb2a-243b-43f8-82d9-48d758c9d62f"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"RunID"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"3c070007-89c3-4e00-a039-19a86b2f9224"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"Result"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Hello World!"</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Congratulations, you have successfully run your very first Cadence workflow.</p>
<p>For a bonus point, the Cadence team has also developed a demonstrative web dashboard to visualize the history of all workflows you have run when you start the Cadence server. Check <a href="http://localhost:8088/" target="_blank" rel="noopener noreferrer">http://localhost:8088</a> to see the dashboard like this.</p>
<p><img decoding="async" loading="lazy" alt="cadencde-ui" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/cadence_ui-7a1200a6a9f9d11aa28452f0cd539b71.png" width="3790" height="674" class="img_ev3q"></p>
<p>This web portal persists all historical workflow you have run recently. Search for the domain you used for this tutorial. In our case, type <code>test-domain</code> and hit enter. You may see a list of workflows with detailed information. Feel free to explore the web UI and raise your suggestions to our <a href="https://github.com/cadence-workflow/cadence-web" target="_blank" rel="noopener noreferrer">Github repo</a>.</p>
<p><img decoding="async" loading="lazy" alt="cadence-ui-detailed" src="https://cadenceworkflow.io/Cadence-Docs/assets/images/cadence_ui_detailed-786dba0e7aa1f9048af4f0c1420c3ccf.png" width="3790" height="764" class="img_ev3q"></p>
<p>For the incoming blogs, we will cover more advanced topics and use cases with Cadence.</p>]]></content:encoded>
            <category>Deep Dives</category>
            <category>Introduction to Cadence</category>
        </item>
        <item>
            <title><![CDATA[Bad practices and Anti-patterns with Cadence (Part 1)]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2023/07/10/cadence-bad-practices-part-1</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2023/07/10/cadence-bad-practices-part-1</guid>
            <pubDate>Mon, 10 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[In the upcoming blog series, we will delve into a discussion about common bad practices and anti-patterns related to Cadence. As diverse teams often encounter distinct business use cases, it becomes imperative to address the most frequently reported issues in Cadence workflows. To provide valuable insights and guidance, the Cadence team has meticulously compiled these common challenges based on customer feedback.]]></description>
            <content:encoded><![CDATA[<p>In the upcoming blog series, we will delve into a discussion about common bad practices and anti-patterns related to Cadence. As diverse teams often encounter distinct business use cases, it becomes imperative to address the most frequently reported issues in Cadence workflows. To provide valuable insights and guidance, the Cadence team has meticulously compiled these common challenges based on customer feedback.</p>
<ul>
<li>Reusing the same workflow ID for very active/continuous running workflows</li>
</ul>
<p>Cadence organizes workflows based on their unique IDs, using a process called <b>partitioning</b>. If a workflow receives a large number of updates in a short period of time or frequently starts new runs using the <code>continueAsNew</code> function, all these updates will be directed to the same shard. Unfortunately, the Cadence backend is not equipped to handle this concentrated workload efficiently. As a result, a situation known as a "hot shard" arises, overloading the Cadence backend and worsening the problem.</p>
<p>Solution:
Well, the best way to avoid this is simply just design your workflow in the way such that each workflow owns a uniformly distributed workflow ID across your Cadence domain. This will make sure that Cadence backend is able to evenly distribute the traffic with proper partition on your workflowIDs.</p>
<ul>
<li>Excessive batch jobs or an enormous number of timers triggered at the same time</li>
</ul>
<p>Cadence has the capability to handle a large number of concurrent tasks initiated simultaneously, but tampering with this feature can lead to issues within the Cadence system. Consider a scenario where millions of jobs are scheduled to start at the same time and are expected to finish within a specific time interval. Cadence faces the challenge of understanding the desired behavior of customers in such cases. It is uncertain whether the intention is to complete all jobs simultaneously, provide progressive updates in parallel, or finish all jobs before a given deadline. This ambiguity arises due to the independent nature of each job and the difficulty in predicting their outcomes.</p>
<p>Moreover, Cadence workers utilize a sticky cache by default to optimize the runtime of workflows. However, when an overwhelming number of parallel workflows cannot fit into the cache, it can result in <b>cache thrashing</b>. This, in turn, leads to a quadratic increase in runtime complexity, specifically O(n^2), exacerbating the overall performance of the system.</p>
<p>Solution:
There are multiple ways to address this issue. Customers can either run jobs in a smaller batch or use start workflow jitter to randomly distribute timers within certain timeframe.</p>]]></content:encoded>
            <category>Introduction to Cadence</category>
            <category>Deep Dives</category>
        </item>
        <item>
            <title><![CDATA[Implement a Cadence worker service from scratch]]></title>
            <link>https://cadenceworkflow.io/Cadence-Docs/blog/2023/07/05/implement-cadence-worker-from-scratch</link>
            <guid>https://cadenceworkflow.io/Cadence-Docs/blog/2023/07/05/implement-cadence-worker-from-scratch</guid>
            <pubDate>Wed, 05 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[In the previous blog, we have introduced three critical components for a Cadence application: the Cadence backend, domain, and worker. Among these, the worker service is the most crucial focus for developers as it hosts the activities and workflows of a Cadence application. In this blog, I will provide a short tutorial on how to implement a simple worker service from scratch in Go.]]></description>
            <content:encoded><![CDATA[<p>In the previous <a href="https://cadenceworkflow.io/Cadence-Docs/blog/2023/06/28/components-of-cadence-application-setup">blog</a>, we have introduced three critical components for a Cadence application: the Cadence backend, domain, and worker. Among these, the worker service is the most crucial focus for developers as it hosts the activities and workflows of a Cadence application. In this blog, I will provide a short tutorial on how to implement a simple worker service from scratch in Go.</p>
<p>To finish this tutorial, there are two prerequisites you need to finish first</p>
<ol>
<li>Register a Cadence domain for your worker. For this tutorial, I've already registered a domain named <code>test-domain</code></li>
<li>Start the Cadence backend server in background.</li>
</ol>
<p>To get started, let's simply use the native HTTP package built in Go to start a process listening to port 3000. You may customize the port for your worker, but the port you choose should not conflict with existing port for your Cadence backend.</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token string" style="color:#e3116c">"fmt"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token string" style="color:#e3116c">"net/http"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Cadence worker started at port 3000"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ListenAndServe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">":3000"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Next, let's define some basic configurations for the worker. In real production environment, you may need to implement them in configurational languages, but in this tutorial, let's just hard code them for now.</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> HostPort </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"127.0.0.1:7933"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> Domain </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-domain"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> TaskListName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-worker"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> ClientName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-worker"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> CadenceService </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"cadence-frontend"</span><br></span></code></pre></div></div>
<p>Note that the domain is what we've already registered in advance. We will need to use this domain to interact with Cadence CLI tool.</p>
<p>Then let's write a simple function to build a Cadence client on gRPC in your worker, which will communicate with the Cadence backend continuously.</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">buildCadenceClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> workflowserviceclient</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Interface </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dispatcher </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> yarpc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewDispatcher</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">yarpc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Config</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		Name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ClientName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		Outbounds</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> yarpc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Outbounds</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		  CadenceService</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Unary</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> grpc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewTransport</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewSingleOutbound</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">HostPort</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> dispatcher</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">panic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Failed to start dispatcher"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	  clientConfig </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> dispatcher</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ClientConfig</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CadenceService</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> compatibility</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewThrift2ProtoAdapter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		apiv1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewDomainAPIYARPCClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">clientConfig</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		apiv1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewWorkflowAPIYARPCClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">clientConfig</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		apiv1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewWorkerAPIYARPCClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">clientConfig</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		apiv1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewVisibilityAPIYARPCClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">clientConfig</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Let's also build a logger to help us debug our application</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">buildLogger</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">zap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Logger </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    config </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> zap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewDevelopmentConfig</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Level</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">SetLevel</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">zapcore</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">InfoLevel</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> err </span><span class="token builtin">error</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    logger</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Build</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">panic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Failed to setup logger"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> logger</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>With both client and logger helper function ready, let's write the function that starts our worker.</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">startWorker</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">logger </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">zap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Logger</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> service workflowserviceclient</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Interface</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// TaskListName identifies set of client workflows, activities, and workers.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// It could be your group or client or application name.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    workerOptions </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> worker</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Options</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Logger</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">       logger</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        MetricsScope</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> tally</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewTestScope</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">TaskListName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">map</span><span class="token punctuation" style="color:#393A34">[</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    worker </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> worker</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">New</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        service</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Domain</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        TaskListName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        workerOptions</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> worker</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">panic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Failed to start worker"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Started Worker."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> zap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"worker"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> TaskListName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Now we have all components ready for the worker, let's put them together.</p>
<div class="language-Go language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"net/http"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"go.uber.org/cadence/.gen/go/cadence/workflowserviceclient"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"go.uber.org/cadence/compatibility"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"go.uber.org/cadence/worker"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    apiv1 </span><span class="token string" style="color:#e3116c">"github.com/cadence-workflow/cadence-idl/go/proto/api/v1"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"github.com/uber-go/tally"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"go.uber.org/zap"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"go.uber.org/zap/zapcore"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"go.uber.org/yarpc"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"go.uber.org/yarpc/transport/grpc"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> HostPort </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"127.0.0.1:7933"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> Domain </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-domain"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> TaskListName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-worker"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> ClientName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-worker"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> CadenceService </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"cadence-frontend"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">startWorker</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">buildLogger</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">buildCadenceClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ListenAndServe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">":3000"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">buildLogger</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">zap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Logger </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    config </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> zap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewDevelopmentConfig</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Level</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">SetLevel</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">zapcore</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">InfoLevel</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> err </span><span class="token builtin">error</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    logger</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Build</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">panic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Failed to setup logger"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> logger</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">buildCadenceClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> workflowserviceclient</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Interface </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dispatcher </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> yarpc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewDispatcher</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">yarpc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Config</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		Name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ClientName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		Outbounds</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> yarpc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Outbounds</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		  CadenceService</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Unary</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> grpc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewTransport</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewSingleOutbound</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">HostPort</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> dispatcher</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">panic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Failed to start dispatcher"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	  clientConfig </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> dispatcher</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ClientConfig</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CadenceService</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> compatibility</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewThrift2ProtoAdapter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		apiv1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewDomainAPIYARPCClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">clientConfig</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		apiv1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewWorkflowAPIYARPCClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">clientConfig</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		apiv1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewWorkerAPIYARPCClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">clientConfig</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		apiv1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewVisibilityAPIYARPCClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">clientConfig</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">startWorker</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">logger </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">zap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Logger</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> service workflowserviceclient</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Interface</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// TaskListName identifies set of client workflows, activities, and workers.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// It could be your group or client or application name.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    workerOptions </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> worker</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Options</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Logger</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">       logger</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        MetricsScope</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> tally</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewTestScope</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">TaskListName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">map</span><span class="token punctuation" style="color:#393A34">[</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    worker </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> worker</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">New</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        service</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Domain</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        TaskListName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        workerOptions</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> worker</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">panic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Failed to start worker"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Started Worker."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> zap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"worker"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> TaskListName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>Open a new terminal and start this server, you should see logs like</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token number" style="color:#36acaa">2023</span><span class="token plain">-07-03T11:46:46.266-0700    INFO    internal/internal_worker.go:826 Worker has no workflows registered, so workflow worker will not be started.     </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"Domain"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-domain"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"TaskList"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-worker"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"WorkerID"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"35987@uber-C02F18EQMD6R@test-worker@90c0260e-ba5c-4652-9f10-c6d1f9e29c1d"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">2023</span><span class="token plain">-07-03T11:46:46.267-0700    INFO    internal/internal_worker.go:834 Started Workflow Worker </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"Domain"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-domain"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"TaskList"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-worker"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"WorkerID"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"35987@uber-C02F18EQMD6R@test-worker@90c0260e-ba5c-4652-9f10-c6d1f9e29c1d"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">2023</span><span class="token plain">-07-03T11:46:46.267-0700    INFO    internal/internal_worker.go:838 Worker has no activities registered, so activity worker will not be started.    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"Domain"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-domain"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"TaskList"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-worker"</span><span class="token plain">, </span><span class="token string" style="color:#e3116c">"WorkerID"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"35987@uber-C02F18EQMD6R@test-worker@90c0260e-ba5c-4652-9f10-c6d1f9e29c1d"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">2023</span><span class="token plain">-07-03T11:46:46.267-0700    INFO    cadence-worker/main.go:75       Started Worker. </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"worker"</span><span class="token builtin class-name">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test-worker"</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>You may see these logs because your worker is successfully running but we haven't registered any workflows or activities to the worker. In the next tutorial, we will learn how to write a simple hello world workflow for your Cadence application.</p>]]></content:encoded>
            <category>Deep Dives</category>
            <category>Introduction to Cadence</category>
        </item>
    </channel>
</rss>